{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Commercial Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy-commercial",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2022-40152",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "woodstox-core: woodstox to serialise XML data was vulnerable to Denial of Service attacks"
              },
              "fullDescription": {
                "text": "Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-40152",
              "help": {
                "text": "Vulnerability CVE-2022-40152\nSeverity: MEDIUM\nPackage: com.fasterxml.woodstox:woodstox-core\nFixed Version: 6.4.0, 5.4.0\nLink: [CVE-2022-40152](https://avd.aquasec.com/nvd/cve-2022-40152)\nThose using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",
                "markdown": "**Vulnerability CVE-2022-40152**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|com.fasterxml.woodstox:woodstox-core|6.4.0, 5.4.0|[CVE-2022-40152](https://avd.aquasec.com/nvd/cve-2022-40152)|\n\nThose using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2018-10237",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "guava: Unbounded memory allocation in AtomicDoubleArray and CompoundOrdering classes allow remote attackers to cause a denial of service"
              },
              "fullDescription": {
                "text": "Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-10237",
              "help": {
                "text": "Vulnerability CVE-2018-10237\nSeverity: MEDIUM\nPackage: com.google.guava:guava\nFixed Version: 24.1.1-android\nLink: [CVE-2018-10237](https://avd.aquasec.com/nvd/cve-2018-10237)\nUnbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",
                "markdown": "**Vulnerability CVE-2018-10237**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|com.google.guava:guava|24.1.1-android|[CVE-2018-10237](https://avd.aquasec.com/nvd/cve-2018-10237)|\n\nUnbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-2976",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "guava: insecure temporary directory creation"
              },
              "fullDescription": {
                "text": "Use of Java\u0026#39;s default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2976",
              "help": {
                "text": "Vulnerability CVE-2023-2976\nSeverity: MEDIUM\nPackage: com.google.guava:guava\nFixed Version: 32.0.0-android\nLink: [CVE-2023-2976](https://avd.aquasec.com/nvd/cve-2023-2976)\nUse of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.\n\n",
                "markdown": "**Vulnerability CVE-2023-2976**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|com.google.guava:guava|32.0.0-android|[CVE-2023-2976](https://avd.aquasec.com/nvd/cve-2023-2976)|\n\nUse of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8908",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "guava: local information disclosure via temporary directory created with unsafe permissions"
              },
              "fullDescription": {
                "text": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime\u0026#39;s java.io.tmpdir system property to point to a location whose permissions are appropriately configured.\n\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8908",
              "help": {
                "text": "Vulnerability CVE-2020-8908\nSeverity: LOW\nPackage: com.google.guava:guava\nFixed Version: 32.0.0-android\nLink: [CVE-2020-8908](https://avd.aquasec.com/nvd/cve-2020-8908)\nA temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.\n\n",
                "markdown": "**Vulnerability CVE-2020-8908**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|com.google.guava:guava|32.0.0-android|[CVE-2020-8908](https://avd.aquasec.com/nvd/cve-2020-8908)|\n\nA temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-24998",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "FileUpload: FileUpload DoS with excessive parts"
              },
              "fullDescription": {
                "text": "Apache Commons FileUpload before 1.5 does not limit the number of request parts to be processed resulting in the possibility of an attacker triggering a DoS with a malicious upload or series of uploads.\n\n\n\n\nNote that, like all of the file upload limits, the\n          new configuration option (FileUploadBase#setFileCountMax) is not\n          enabled by default and must be explicitly configured.\n\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24998",
              "help": {
                "text": "Vulnerability CVE-2023-24998\nSeverity: HIGH\nPackage: commons-fileupload:commons-fileupload\nFixed Version: 1.5\nLink: [CVE-2023-24998](https://avd.aquasec.com/nvd/cve-2023-24998)\nApache Commons FileUpload before 1.5 does not limit the number of request parts to be processed resulting in the possibility of an attacker triggering a DoS with a malicious upload or series of uploads.\n\n\n\n\nNote that, like all of the file upload limits, the\n          new configuration option (FileUploadBase#setFileCountMax) is not\n          enabled by default and must be explicitly configured.\n\n\n",
                "markdown": "**Vulnerability CVE-2023-24998**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|commons-fileupload:commons-fileupload|1.5|[CVE-2023-24998](https://avd.aquasec.com/nvd/cve-2023-24998)|\n\nApache Commons FileUpload before 1.5 does not limit the number of request parts to be processed resulting in the possibility of an attacker triggering a DoS with a malicious upload or series of uploads.\n\n\n\n\nNote that, like all of the file upload limits, the\n          new configuration option (FileUploadBase#setFileCountMax) is not\n          enabled by default and must be explicitly configured.\n\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-47554",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "apache-commons-io: Possible denial of service attack on untrusted input to XmlStreamReader"
              },
              "fullDescription": {
                "text": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe org.apache.commons.io.input.XmlStreamReader class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-47554",
              "help": {
                "text": "Vulnerability CVE-2024-47554\nSeverity: HIGH\nPackage: commons-io:commons-io\nFixed Version: 2.14.0\nLink: [CVE-2024-47554](https://avd.aquasec.com/nvd/cve-2024-47554)\nUncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe org.apache.commons.io.input.XmlStreamReader class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
                "markdown": "**Vulnerability CVE-2024-47554**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|commons-io:commons-io|2.14.0|[CVE-2024-47554](https://avd.aquasec.com/nvd/cve-2024-47554)|\n\nUncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe org.apache.commons.io.input.XmlStreamReader class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-29425",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "apache-commons-io: Limited path traversal in Apache Commons IO 2.2 to 2.6"
              },
              "fullDescription": {
                "text": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \u0026#34;//../foo\u0026#34;, or \u0026#34;\\\\..\\foo\u0026#34;, the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \u0026#34;limited\u0026#34; path traversal), if the calling code would use the result to construct a path value."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-29425",
              "help": {
                "text": "Vulnerability CVE-2021-29425\nSeverity: MEDIUM\nPackage: commons-io:commons-io\nFixed Version: 2.7\nLink: [CVE-2021-29425](https://avd.aquasec.com/nvd/cve-2021-29425)\nIn Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
                "markdown": "**Vulnerability CVE-2021-29425**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|commons-io:commons-io|2.7|[CVE-2021-29425](https://avd.aquasec.com/nvd/cve-2021-29425)|\n\nIn Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-44228",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "log4j-core: Remote code execution in Log4j 2.x when logs contain an attacker-controlled string value"
              },
              "fullDescription": {
                "text": "Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-44228",
              "help": {
                "text": "Vulnerability CVE-2021-44228\nSeverity: CRITICAL\nPackage: org.apache.logging.log4j:log4j-core\nFixed Version: 2.15.0, 2.3.1, 2.12.2\nLink: [CVE-2021-44228](https://avd.aquasec.com/nvd/cve-2021-44228)\nApache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.",
                "markdown": "**Vulnerability CVE-2021-44228**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.apache.logging.log4j:log4j-core|2.15.0, 2.3.1, 2.12.2|[CVE-2021-44228](https://avd.aquasec.com/nvd/cve-2021-44228)|\n\nApache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "10.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-45046",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "log4j-core: DoS in log4j 2.x with thread context message pattern and context lookup pattern (incomplete fix for CVE-2021-44228)"
              },
              "fullDescription": {
                "text": "It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-45046",
              "help": {
                "text": "Vulnerability CVE-2021-45046\nSeverity: CRITICAL\nPackage: org.apache.logging.log4j:log4j-core\nFixed Version: 2.16.0, 2.12.2\nLink: [CVE-2021-45046](https://avd.aquasec.com/nvd/cve-2021-45046)\nIt was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.",
                "markdown": "**Vulnerability CVE-2021-45046**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.apache.logging.log4j:log4j-core|2.16.0, 2.12.2|[CVE-2021-45046](https://avd.aquasec.com/nvd/cve-2021-45046)|\n\nIt was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-45105",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "log4j-core: DoS in log4j 2.x with Thread Context Map (MDC) input data contains a recursive lookup and context lookup pattern"
              },
              "fullDescription": {
                "text": "Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-45105",
              "help": {
                "text": "Vulnerability CVE-2021-45105\nSeverity: HIGH\nPackage: org.apache.logging.log4j:log4j-core\nFixed Version: 2.12.3, 2.17.0, 2.3.1\nLink: [CVE-2021-45105](https://avd.aquasec.com/nvd/cve-2021-45105)\nApache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1.",
                "markdown": "**Vulnerability CVE-2021-45105**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.apache.logging.log4j:log4j-core|2.12.3, 2.17.0, 2.3.1|[CVE-2021-45105](https://avd.aquasec.com/nvd/cve-2021-45105)|\n\nApache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-44832",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "log4j-core: remote code execution via JDBC Appender"
              },
              "fullDescription": {
                "text": "Apache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-44832",
              "help": {
                "text": "Vulnerability CVE-2021-44832\nSeverity: MEDIUM\nPackage: org.apache.logging.log4j:log4j-core\nFixed Version: 2.3.2, 2.12.4, 2.17.1\nLink: [CVE-2021-44832](https://avd.aquasec.com/nvd/cve-2021-44832)\nApache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2.",
                "markdown": "**Vulnerability CVE-2021-44832**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.apache.logging.log4j:log4j-core|2.3.2, 2.12.4, 2.17.1|[CVE-2021-44832](https://avd.aquasec.com/nvd/cve-2021-44832)|\n\nApache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-41853",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "hsqldb: Untrusted input may lead to RCE attack"
              },
              "fullDescription": {
                "text": "Those using java.sql.Statement or java.sql.PreparedStatement in hsqldb (HyperSQL DataBase) to process untrusted input may be vulnerable to a remote code execution attack. By default it is allowed to call any static method of any Java class in the classpath resulting in code execution. The issue can be prevented by updating to 2.7.1 or by setting the system property \u0026#34;hsqldb.method_class_names\u0026#34; to classes which are allowed to be called. For example, System.setProperty(\u0026#34;hsqldb.method_class_names\u0026#34;, \u0026#34;abc\u0026#34;) or Java argument -Dhsqldb.method_class_names=\u0026#34;abc\u0026#34; can be used. From version 2.7.1 all classes by default are not accessible except those in java.lang.Math and need to be manually enabled."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41853",
              "help": {
                "text": "Vulnerability CVE-2022-41853\nSeverity: CRITICAL\nPackage: org.hsqldb:hsqldb\nFixed Version: 2.7.1\nLink: [CVE-2022-41853](https://avd.aquasec.com/nvd/cve-2022-41853)\nThose using java.sql.Statement or java.sql.PreparedStatement in hsqldb (HyperSQL DataBase) to process untrusted input may be vulnerable to a remote code execution attack. By default it is allowed to call any static method of any Java class in the classpath resulting in code execution. The issue can be prevented by updating to 2.7.1 or by setting the system property \"hsqldb.method_class_names\" to classes which are allowed to be called. For example, System.setProperty(\"hsqldb.method_class_names\", \"abc\") or Java argument -Dhsqldb.method_class_names=\"abc\" can be used. From version 2.7.1 all classes by default are not accessible except those in java.lang.Math and need to be manually enabled.",
                "markdown": "**Vulnerability CVE-2022-41853**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.hsqldb:hsqldb|2.7.1|[CVE-2022-41853](https://avd.aquasec.com/nvd/cve-2022-41853)|\n\nThose using java.sql.Statement or java.sql.PreparedStatement in hsqldb (HyperSQL DataBase) to process untrusted input may be vulnerable to a remote code execution attack. By default it is allowed to call any static method of any Java class in the classpath resulting in code execution. The issue can be prevented by updating to 2.7.1 or by setting the system property \"hsqldb.method_class_names\" to classes which are allowed to be called. For example, System.setProperty(\"hsqldb.method_class_names\", \"abc\") or Java argument -Dhsqldb.method_class_names=\"abc\" can be used. From version 2.7.1 all classes by default are not accessible except those in java.lang.Math and need to be manually enabled."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-1597",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pgjdbc: PostgreSQL JDBC Driver allows attacker to inject SQL if using PreferQueryMode=SIMPLE"
              },
              "fullDescription": {
                "text": "pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.28 are affected."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-1597",
              "help": {
                "text": "Vulnerability CVE-2024-1597\nSeverity: CRITICAL\nPackage: org.postgresql:postgresql\nFixed Version: 42.2.28, 42.3.9, 42.4.4, 42.5.5, 42.6.1, 42.7.2\nLink: [CVE-2024-1597](https://avd.aquasec.com/nvd/cve-2024-1597)\npgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.28 are affected.",
                "markdown": "**Vulnerability CVE-2024-1597**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.postgresql:postgresql|42.2.28, 42.3.9, 42.4.4, 42.5.5, 42.6.1, 42.7.2|[CVE-2024-1597](https://avd.aquasec.com/nvd/cve-2024-1597)|\n\npgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.28 are affected."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "10.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-31197",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "postgresql: SQL Injection in ResultSet.refreshRow() with malicious column names"
              },
              "fullDescription": {
                "text": "PostgreSQL JDBC Driver (PgJDBC for short) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code. The PGJDBC implementation of the `java.sql.ResultRow.refreshRow()` method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. `;`, could lead to SQL injection. This could lead to executing additional SQL commands as the application\u0026#39;s JDBC user. User applications that do not invoke the `ResultSet.refreshRow()` method are not impacted. User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who\u0026#39;s column names would contain the malicious SQL and subsequently invoke the `refreshRow()` method on the ResultSet. Note that the application\u0026#39;s JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user. Patched versions will be released as `42.2.26` and `42.4.1`. Users are advised to upgrade. There are no known workarounds for this issue."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-31197",
              "help": {
                "text": "Vulnerability CVE-2022-31197\nSeverity: HIGH\nPackage: org.postgresql:postgresql\nFixed Version: 42.2.26, 42.4.1, 42.3.7\nLink: [CVE-2022-31197](https://avd.aquasec.com/nvd/cve-2022-31197)\nPostgreSQL JDBC Driver (PgJDBC for short) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code. The PGJDBC implementation of the `java.sql.ResultRow.refreshRow()` method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. `;`, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the `ResultSet.refreshRow()` method are not impacted. User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the `refreshRow()` method on the ResultSet. Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user. Patched versions will be released as `42.2.26` and `42.4.1`. Users are advised to upgrade. There are no known workarounds for this issue.",
                "markdown": "**Vulnerability CVE-2022-31197**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.postgresql:postgresql|42.2.26, 42.4.1, 42.3.7|[CVE-2022-31197](https://avd.aquasec.com/nvd/cve-2022-31197)|\n\nPostgreSQL JDBC Driver (PgJDBC for short) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code. The PGJDBC implementation of the `java.sql.ResultRow.refreshRow()` method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. `;`, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the `ResultSet.refreshRow()` method are not impacted. User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the `refreshRow()` method on the ResultSet. Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user. Patched versions will be released as `42.2.26` and `42.4.1`. Users are advised to upgrade. There are no known workarounds for this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-22978",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: Authorization Bypass in RegexRequestMatcher"
              },
              "fullDescription": {
                "text": "In spring security versions prior to 5.4.11+, 5.5.7+ , 5.6.4+ and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with `.` in the regular expression are possibly vulnerable to an authorization bypass."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22978",
              "help": {
                "text": "Vulnerability CVE-2022-22978\nSeverity: CRITICAL\nPackage: org.springframework.security:spring-security-web\nFixed Version: 5.5.7, 5.6.4, 5.4.11\nLink: [CVE-2022-22978](https://avd.aquasec.com/nvd/cve-2022-22978)\nIn spring security versions prior to 5.4.11+, 5.5.7+ , 5.6.4+ and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with `.` in the regular expression are possibly vulnerable to an authorization bypass.",
                "markdown": "**Vulnerability CVE-2022-22978**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.springframework.security:spring-security-web|5.5.7, 5.6.4, 5.4.11|[CVE-2022-22978](https://avd.aquasec.com/nvd/cve-2022-22978)|\n\nIn spring security versions prior to 5.4.11+, 5.5.7+ , 5.6.4+ and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with `.` in the regular expression are possibly vulnerable to an authorization bypass."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2016-5007",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring: Path matching inconsistency"
              },
              "fullDescription": {
                "text": "Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-5007",
              "help": {
                "text": "Vulnerability CVE-2016-5007\nSeverity: HIGH\nPackage: org.springframework:spring-core\nFixed Version: 4.3.1\nLink: [CVE-2016-5007](https://avd.aquasec.com/nvd/cve-2016-5007)\nBoth Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",
                "markdown": "**Vulnerability CVE-2016-5007**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-core|4.3.1|[CVE-2016-5007](https://avd.aquasec.com/nvd/cve-2016-5007)|\n\nBoth Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2016-9879",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Security: Improper handling of path parameters allows bypassing the security constraint"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pivotal Spring Security before 3.2.10, 4.1.x before 4.1.4, and 4.2.x before 4.2.1. Spring Security does not consider URL path parameters when processing security constraints. By adding a URL path parameter with an encoded \u0026#34;/\u0026#34; to a request, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. The unexpected presence of path parameters can cause a constraint to be bypassed. Users of Apache Tomcat (all current versions) are not affected by this vulnerability since Tomcat follows the guidance previously provided by the Servlet Expert group and strips path parameters from the value returned by getContextPath(), getServletPath(), and getPathInfo(). Users of other Servlet containers based on Apache Tomcat may or may not be affected depending on whether or not the handling of path parameters has been modified. Users of IBM WebSphere Application Server 8.5.x are known to be affected. Users of other containers that implement the Servlet specification may be affected."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-9879",
              "help": {
                "text": "Vulnerability CVE-2016-9879\nSeverity: HIGH\nPackage: org.springframework.security:spring-security-core\nFixed Version: 3.2.10.RELEASE, 4.1.4.RELEASE, 4.2.1.RELEASE\nLink: [CVE-2016-9879](https://avd.aquasec.com/nvd/cve-2016-9879)\nAn issue was discovered in Pivotal Spring Security before 3.2.10, 4.1.x before 4.1.4, and 4.2.x before 4.2.1. Spring Security does not consider URL path parameters when processing security constraints. By adding a URL path parameter with an encoded \"/\" to a request, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. The unexpected presence of path parameters can cause a constraint to be bypassed. Users of Apache Tomcat (all current versions) are not affected by this vulnerability since Tomcat follows the guidance previously provided by the Servlet Expert group and strips path parameters from the value returned by getContextPath(), getServletPath(), and getPathInfo(). Users of other Servlet containers based on Apache Tomcat may or may not be affected depending on whether or not the handling of path parameters has been modified. Users of IBM WebSphere Application Server 8.5.x are known to be affected. Users of other containers that implement the Servlet specification may be affected.",
                "markdown": "**Vulnerability CVE-2016-9879**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework.security:spring-security-core|3.2.10.RELEASE, 4.1.4.RELEASE, 4.2.1.RELEASE|[CVE-2016-9879](https://avd.aquasec.com/nvd/cve-2016-9879)|\n\nAn issue was discovered in Pivotal Spring Security before 3.2.10, 4.1.x before 4.1.4, and 4.2.x before 4.2.1. Spring Security does not consider URL path parameters when processing security constraints. By adding a URL path parameter with an encoded \"/\" to a request, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. The unexpected presence of path parameters can cause a constraint to be bypassed. Users of Apache Tomcat (all current versions) are not affected by this vulnerability since Tomcat follows the guidance previously provided by the Servlet Expert group and strips path parameters from the value returned by getContextPath(), getServletPath(), and getPathInfo(). Users of other Servlet containers based on Apache Tomcat may or may not be affected depending on whether or not the handling of path parameters has been modified. Users of IBM WebSphere Application Server 8.5.x are known to be affected. Users of other containers that implement the Servlet specification may be affected."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-11272",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-security-core: mishandling of user passwords allows logging in with a password of NULL"
              },
              "fullDescription": {
                "text": "Spring Security, versions 4.2.x up to 4.2.12, and older unsupported versions support plain text passwords using PlaintextPasswordEncoder. If an application using an affected version of Spring Security is leveraging PlaintextPasswordEncoder and a user has a null encoded password, a malicious user (or attacker) can authenticate using a password of \u0026#34;null\u0026#34;."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-11272",
              "help": {
                "text": "Vulnerability CVE-2019-11272\nSeverity: HIGH\nPackage: org.springframework.security:spring-security-core\nFixed Version: 4.2.13\nLink: [CVE-2019-11272](https://avd.aquasec.com/nvd/cve-2019-11272)\nSpring Security, versions 4.2.x up to 4.2.12, and older unsupported versions support plain text passwords using PlaintextPasswordEncoder. If an application using an affected version of Spring Security is leveraging PlaintextPasswordEncoder and a user has a null encoded password, a malicious user (or attacker) can authenticate using a password of \"null\".",
                "markdown": "**Vulnerability CVE-2019-11272**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework.security:spring-security-core|4.2.13|[CVE-2019-11272](https://avd.aquasec.com/nvd/cve-2019-11272)|\n\nSpring Security, versions 4.2.x up to 4.2.12, and older unsupported versions support plain text passwords using PlaintextPasswordEncoder. If an application using an affected version of Spring Security is leveraging PlaintextPasswordEncoder and a user has a null encoded password, a malicious user (or attacker) can authenticate using a password of \"null\"."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-22257",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-security: Broken Access Control With Direct Use of AuthenticatedVoter"
              },
              "fullDescription": {
                "text": "In Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to \n5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, \nversions 6.2.x prior to 6.2.3, an application is possible vulnerable to \nbroken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-22257",
              "help": {
                "text": "Vulnerability CVE-2024-22257\nSeverity: HIGH\nPackage: org.springframework.security:spring-security-core\nFixed Version: 5.7.12, 5.8.11, 6.1.8, 6.2.3\nLink: [CVE-2024-22257](https://avd.aquasec.com/nvd/cve-2024-22257)\nIn Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to \n5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, \nversions 6.2.x prior to 6.2.3, an application is possible vulnerable to \nbroken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.\n\n",
                "markdown": "**Vulnerability CVE-2024-22257**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework.security:spring-security-core|5.7.12, 5.8.11, 6.1.8, 6.2.3|[CVE-2024-22257](https://avd.aquasec.com/nvd/cve-2024-22257)|\n\nIn Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to \n5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, \nversions 6.2.x prior to 6.2.3, an application is possible vulnerable to \nbroken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-5408",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Insufficient Entropy in Spring Security"
              },
              "fullDescription": {
                "text": "Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-5408",
              "help": {
                "text": "Vulnerability CVE-2020-5408\nSeverity: MEDIUM\nPackage: org.springframework.security:spring-security-core\nFixed Version: 5.3.2, 5.2.4, 5.1.10, 5.0.16, 4.2.16\nLink: [CVE-2020-5408](https://avd.aquasec.com/nvd/cve-2020-5408)\nSpring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack.",
                "markdown": "**Vulnerability CVE-2020-5408**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework.security:spring-security-core|5.3.2, 5.2.4, 5.1.10, 5.0.16, 4.2.16|[CVE-2020-5408](https://avd.aquasec.com/nvd/cve-2020-5408)|\n\nSpring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-38821",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Spring-WebFlux: Authorization Bypass of Static Resources in WebFlux Applications"
              },
              "fullDescription": {
                "text": "Spring WebFlux applications that have Spring Security authorization rules on static resources can be bypassed under certain circumstances.\n\nFor this to impact an application, all of the following must be true:\n\n  *  It must be a WebFlux application\n  *  It must be using Spring\u0026#39;s static resources support\n  *  It must have a non-permitAll authorization rule applied to the static resources support"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-38821",
              "help": {
                "text": "Vulnerability CVE-2024-38821\nSeverity: CRITICAL\nPackage: org.springframework.security:spring-security-web\nFixed Version: 5.7.13, 5.8.15, 6.2.7, 6.0.13, 6.1.11, 6.3.4\nLink: [CVE-2024-38821](https://avd.aquasec.com/nvd/cve-2024-38821)\nSpring WebFlux applications that have Spring Security authorization rules on static resources can be bypassed under certain circumstances.\n\nFor this to impact an application, all of the following must be true:\n\n  *  It must be a WebFlux application\n  *  It must be using Spring's static resources support\n  *  It must have a non-permitAll authorization rule applied to the static resources support",
                "markdown": "**Vulnerability CVE-2024-38821**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.springframework.security:spring-security-web|5.7.13, 5.8.15, 6.2.7, 6.0.13, 6.1.11, 6.3.4|[CVE-2024-38821](https://avd.aquasec.com/nvd/cve-2024-38821)|\n\nSpring WebFlux applications that have Spring Security authorization rules on static resources can be bypassed under certain circumstances.\n\nFor this to impact an application, all of the following must be true:\n\n  *  It must be a WebFlux application\n  *  It must be using Spring's static resources support\n  *  It must have a non-permitAll authorization rule applied to the static resources support"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-22112",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jenkins: Privilege escalation vulnerability in bundled Spring Security library"
              },
              "fullDescription": {
                "text": "Spring Security 5.4.x prior to 5.4.4, 5.3.x prior to 5.3.8.RELEASE, 5.2.x prior to 5.2.9.RELEASE, and older unsupported versions can fail to save the SecurityContext if it is changed more than once in a single request.A malicious user cannot cause the bug to happen (it must be programmed in). However, if the application\u0026#39;s intent is to only allow the user to run with elevated privileges in a small portion of the application, the bug can be leveraged to extend those privileges to the rest of the application."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22112",
              "help": {
                "text": "Vulnerability CVE-2021-22112\nSeverity: HIGH\nPackage: org.springframework.security:spring-security-web\nFixed Version: 5.4.4, 5.3.8, 5.2.9\nLink: [CVE-2021-22112](https://avd.aquasec.com/nvd/cve-2021-22112)\nSpring Security 5.4.x prior to 5.4.4, 5.3.x prior to 5.3.8.RELEASE, 5.2.x prior to 5.2.9.RELEASE, and older unsupported versions can fail to save the SecurityContext if it is changed more than once in a single request.A malicious user cannot cause the bug to happen (it must be programmed in). However, if the application's intent is to only allow the user to run with elevated privileges in a small portion of the application, the bug can be leveraged to extend those privileges to the rest of the application.",
                "markdown": "**Vulnerability CVE-2021-22112**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework.security:spring-security-web|5.4.4, 5.3.8, 5.2.9|[CVE-2021-22112](https://avd.aquasec.com/nvd/cve-2021-22112)|\n\nSpring Security 5.4.x prior to 5.4.4, 5.3.x prior to 5.3.8.RELEASE, 5.2.x prior to 5.2.9.RELEASE, and older unsupported versions can fail to save the SecurityContext if it is changed more than once in a single request.A malicious user cannot cause the bug to happen (it must be programmed in). However, if the application's intent is to only allow the user to run with elevated privileges in a small portion of the application, the bug can be leveraged to extend those privileges to the rest of the application."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-22965",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-framework: RCE via Data Binding on JDK 9+"
              },
              "fullDescription": {
                "text": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22965",
              "help": {
                "text": "Vulnerability CVE-2022-22965\nSeverity: CRITICAL\nPackage: org.springframework:spring-webmvc\nFixed Version: 5.2.20.RELEASE, 5.3.18\nLink: [CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)\nA Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
                "markdown": "**Vulnerability CVE-2022-22965**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.springframework:spring-webmvc|5.2.20.RELEASE, 5.3.18|[CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)|\n\nA Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-22970",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: DoS via data binding to multipartFile or servlet part"
              },
              "fullDescription": {
                "text": "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22970",
              "help": {
                "text": "Vulnerability CVE-2022-22970\nSeverity: HIGH\nPackage: org.springframework:spring-beans\nFixed Version: 5.2.22.RELEASE, 5.3.20\nLink: [CVE-2022-22970](https://avd.aquasec.com/nvd/cve-2022-22970)\nIn spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.",
                "markdown": "**Vulnerability CVE-2022-22970**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-beans|5.2.22.RELEASE, 5.3.20|[CVE-2022-22970](https://avd.aquasec.com/nvd/cve-2022-22970)|\n\nIn spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-38827",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-security: authorization bypass for case sensitive comparisons"
              },
              "fullDescription": {
                "text": "The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-38827",
              "help": {
                "text": "Vulnerability CVE-2024-38827\nSeverity: MEDIUM\nPackage: org.springframework:spring-jdbc\nFixed Version: 6.1.14\nLink: [CVE-2024-38827](https://avd.aquasec.com/nvd/cve-2024-38827)\nThe usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly.",
                "markdown": "**Vulnerability CVE-2024-38827**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-jdbc|6.1.14|[CVE-2024-38827](https://avd.aquasec.com/nvd/cve-2024-38827)|\n\nThe usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-22968",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Framework: Data Binding Rules Vulnerability"
              },
              "fullDescription": {
                "text": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22968",
              "help": {
                "text": "Vulnerability CVE-2022-22968\nSeverity: HIGH\nPackage: org.springframework:spring-context\nFixed Version: 5.3.19, 5.2.21.RELEASE\nLink: [CVE-2022-22968](https://avd.aquasec.com/nvd/cve-2022-22968)\nIn Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
                "markdown": "**Vulnerability CVE-2022-22968**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-context|5.3.19, 5.2.21.RELEASE|[CVE-2022-22968](https://avd.aquasec.com/nvd/cve-2022-22968)|\n\nIn Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-38820",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The fix for CVE-2022-22968 made disallowedFieldspatterns in DataBinder ..."
              },
              "fullDescription": {
                "text": "The fix for CVE-2022-22968 made disallowedFields patterns in DataBinder case insensitive. However, String.toLowerCase() has some Locale dependent exceptions that could potentially result in fields not protected as expected."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-38820",
              "help": {
                "text": "Vulnerability CVE-2024-38820\nSeverity: MEDIUM\nPackage: org.springframework:spring-context\nFixed Version: 6.1.14\nLink: [CVE-2024-38820](https://avd.aquasec.com/nvd/cve-2024-38820)\nThe fix for CVE-2022-22968 made disallowedFields patterns in DataBinder case insensitive. However, String.toLowerCase() has some Locale dependent exceptions that could potentially result in fields not protected as expected.",
                "markdown": "**Vulnerability CVE-2024-38820**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-context|6.1.14|[CVE-2024-38820](https://avd.aquasec.com/nvd/cve-2024-38820)|\n\nThe fix for CVE-2022-22968 made disallowedFields patterns in DataBinder case insensitive. However, String.toLowerCase() has some Locale dependent exceptions that could potentially result in fields not protected as expected."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2018-1270",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-framework: Possible RCE via spring messaging"
              },
              "fullDescription": {
                "text": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-1270",
              "help": {
                "text": "Vulnerability CVE-2018-1270\nSeverity: CRITICAL\nPackage: org.springframework:spring-core\nFixed Version: 5.0.5, 4.3.16\nLink: [CVE-2018-1270](https://avd.aquasec.com/nvd/cve-2018-1270)\nSpring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",
                "markdown": "**Vulnerability CVE-2018-1270**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.springframework:spring-core|5.0.5, 4.3.16|[CVE-2018-1270](https://avd.aquasec.com/nvd/cve-2018-1270)|\n\nSpring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2018-1275",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-framework: Address partial fix for CVE-2018-1270"
              },
              "fullDescription": {
                "text": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.16 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack. This CVE addresses the partial fix for CVE-2018-1270 in the 4.3.x branch of the Spring Framework."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-1275",
              "help": {
                "text": "Vulnerability CVE-2018-1275\nSeverity: CRITICAL\nPackage: org.springframework:spring-core\nFixed Version: 4.3.16, 5.0.5\nLink: [CVE-2018-1275](https://avd.aquasec.com/nvd/cve-2018-1275)\nSpring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.16 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack. This CVE addresses the partial fix for CVE-2018-1270 in the 4.3.x branch of the Spring Framework.",
                "markdown": "**Vulnerability CVE-2018-1275**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.springframework:spring-core|4.3.16, 5.0.5|[CVE-2018-1275](https://avd.aquasec.com/nvd/cve-2018-1275)|\n\nSpring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.16 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack. This CVE addresses the partial fix for CVE-2018-1270 in the 4.3.x branch of the Spring Framework."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2018-1272",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-framework: Multipart content pollution"
              },
              "fullDescription": {
                "text": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-1272",
              "help": {
                "text": "Vulnerability CVE-2018-1272\nSeverity: HIGH\nPackage: org.springframework:spring-core\nFixed Version: 4.3.15, 5.0.5\nLink: [CVE-2018-1272](https://avd.aquasec.com/nvd/cve-2018-1272)\nSpring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",
                "markdown": "**Vulnerability CVE-2018-1272**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-core|4.3.15, 5.0.5|[CVE-2018-1272](https://avd.aquasec.com/nvd/cve-2018-1272)|\n\nSpring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-15756",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: DoS Attack via Range Requests"
              },
              "fullDescription": {
                "text": "Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-15756",
              "help": {
                "text": "Vulnerability CVE-2018-15756\nSeverity: HIGH\nPackage: org.springframework:spring-core\nFixed Version: 5.1.1.RELEASE, 5.0.10.RELEASE, 4.3.20.RELEASE\nLink: [CVE-2018-15756](https://avd.aquasec.com/nvd/cve-2018-15756)\nSpring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.",
                "markdown": "**Vulnerability CVE-2018-15756**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-core|5.1.1.RELEASE, 5.0.10.RELEASE, 4.3.20.RELEASE|[CVE-2018-15756](https://avd.aquasec.com/nvd/cve-2018-15756)|\n\nSpring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-1257",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-framework: ReDoS Attack with spring-messaging"
              },
              "fullDescription": {
                "text": "Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-1257",
              "help": {
                "text": "Vulnerability CVE-2018-1257\nSeverity: MEDIUM\nPackage: org.springframework:spring-core\nFixed Version: 5.0.6, 4.3.17\nLink: [CVE-2018-1257](https://avd.aquasec.com/nvd/cve-2018-1257)\nSpring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",
                "markdown": "**Vulnerability CVE-2018-1257**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-core|5.0.6, 4.3.17|[CVE-2018-1257](https://avd.aquasec.com/nvd/cve-2018-1257)|\n\nSpring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2018-1271",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-framework: Directory traversal vulnerability with static resources on Windows filesystems"
              },
              "fullDescription": {
                "text": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-1271",
              "help": {
                "text": "Vulnerability CVE-2018-1271\nSeverity: MEDIUM\nPackage: org.springframework:spring-core\nFixed Version: 5.0.5, 4.3.15\nLink: [CVE-2018-1271](https://avd.aquasec.com/nvd/cve-2018-1271)\nSpring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.",
                "markdown": "**Vulnerability CVE-2018-1271**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-core|5.0.5, 4.3.15|[CVE-2018-1271](https://avd.aquasec.com/nvd/cve-2018-1271)|\n\nSpring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-20863",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: Spring Expression DoS Vulnerability"
              },
              "fullDescription": {
                "text": "In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-20863",
              "help": {
                "text": "Vulnerability CVE-2023-20863\nSeverity: HIGH\nPackage: org.springframework:spring-expression\nFixed Version: 6.0.8, 5.3.27, 5.2.24.RELEASE\nLink: [CVE-2023-20863](https://avd.aquasec.com/nvd/cve-2023-20863)\nIn spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
                "markdown": "**Vulnerability CVE-2023-20863**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-expression|6.0.8, 5.3.27, 5.2.24.RELEASE|[CVE-2023-20863](https://avd.aquasec.com/nvd/cve-2023-20863)|\n\nIn spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-22950",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-expression: Denial of service via specially crafted SpEL expression"
              },
              "fullDescription": {
                "text": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22950",
              "help": {
                "text": "Vulnerability CVE-2022-22950\nSeverity: MEDIUM\nPackage: org.springframework:spring-expression\nFixed Version: 5.3.17, 5.2.20.RELEASE\nLink: [CVE-2022-22950](https://avd.aquasec.com/nvd/cve-2022-22950)\nn Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",
                "markdown": "**Vulnerability CVE-2022-22950**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-expression|5.3.17, 5.2.20.RELEASE|[CVE-2022-22950](https://avd.aquasec.com/nvd/cve-2022-22950)|\n\nn Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-20861",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: Spring Expression DoS Vulnerability"
              },
              "fullDescription": {
                "text": "In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-20861",
              "help": {
                "text": "Vulnerability CVE-2023-20861\nSeverity: MEDIUM\nPackage: org.springframework:spring-expression\nFixed Version: 6.0.7, 5.3.26, 5.2.23.RELEASE\nLink: [CVE-2023-20861](https://avd.aquasec.com/nvd/cve-2023-20861)\nIn Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
                "markdown": "**Vulnerability CVE-2023-20861**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-expression|6.0.7, 5.3.26, 5.2.23.RELEASE|[CVE-2023-20861](https://avd.aquasec.com/nvd/cve-2023-20861)|\n\nIn Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-38808",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring-expression: Denial of service when processing a specially crafted Spring Expression Language expression"
              },
              "fullDescription": {
                "text": "In Spring Framework versions 5.3.0 - 5.3.38 and older unsupported versions, it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial of service (DoS) condition.\n\nSpecifically, an application is vulnerable when the following is true:\n\n  *  The application evaluates user-supplied SpEL expressions."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-38808",
              "help": {
                "text": "Vulnerability CVE-2024-38808\nSeverity: MEDIUM\nPackage: org.springframework:spring-expression\nFixed Version: 5.3.39\nLink: [CVE-2024-38808](https://avd.aquasec.com/nvd/cve-2024-38808)\nIn Spring Framework versions 5.3.0 - 5.3.38 and older unsupported versions, it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial of service (DoS) condition.\n\nSpecifically, an application is vulnerable when the following is true:\n\n  *  The application evaluates user-supplied SpEL expressions.",
                "markdown": "**Vulnerability CVE-2024-38808**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-expression|5.3.39|[CVE-2024-38808](https://avd.aquasec.com/nvd/cve-2024-38808)|\n\nIn Spring Framework versions 5.3.0 - 5.3.38 and older unsupported versions, it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial of service (DoS) condition.\n\nSpecifically, an application is vulnerable when the following is true:\n\n  *  The application evaluates user-supplied SpEL expressions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2016-1000027",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "spring: HttpInvokerServiceExporter readRemoteInvocation method untrusted java deserialization"
              },
              "fullDescription": {
                "text": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor\u0026#39;s position is that untrusted data is not an intended use case. The product\u0026#39;s behavior will not be changed because some users rely on deserialization of trusted data."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-1000027",
              "help": {
                "text": "Vulnerability CVE-2016-1000027\nSeverity: CRITICAL\nPackage: org.springframework:spring-web\nFixed Version: 6.0.0\nLink: [CVE-2016-1000027](https://avd.aquasec.com/nvd/cve-2016-1000027)\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",
                "markdown": "**Vulnerability CVE-2016-1000027**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|org.springframework:spring-web|6.0.0|[CVE-2016-1000027](https://avd.aquasec.com/nvd/cve-2016-1000027)|\n\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-22243",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: URL Parsing with Host Validation"
              },
              "fullDescription": {
                "text": "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-22243",
              "help": {
                "text": "Vulnerability CVE-2024-22243\nSeverity: HIGH\nPackage: org.springframework:spring-web\nFixed Version: 6.1.4, 6.0.17, 5.3.32\nLink: [CVE-2024-22243](https://avd.aquasec.com/nvd/cve-2024-22243)\nApplications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n",
                "markdown": "**Vulnerability CVE-2024-22243**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-web|6.1.4, 6.0.17, 5.3.32|[CVE-2024-22243](https://avd.aquasec.com/nvd/cve-2024-22243)|\n\nApplications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-22259",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: URL Parsing with Host Validation"
              },
              "fullDescription": {
                "text": "Applications that use UriComponentsBuilder in Spring Framework to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-22259",
              "help": {
                "text": "Vulnerability CVE-2024-22259\nSeverity: HIGH\nPackage: org.springframework:spring-web\nFixed Version: 6.1.5, 6.0.18, 5.3.33\nLink: [CVE-2024-22259](https://avd.aquasec.com/nvd/cve-2024-22259)\nApplications that use UriComponentsBuilder in Spring Framework to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.\n\n",
                "markdown": "**Vulnerability CVE-2024-22259**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-web|6.1.5, 6.0.18, 5.3.33|[CVE-2024-22259](https://avd.aquasec.com/nvd/cve-2024-22259)|\n\nApplications that use UriComponentsBuilder in Spring Framework to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-22262",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "springframework: URL Parsing with Host Validation"
              },
              "fullDescription": {
                "text": "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22259 https://spring.io/security/cve-2024-22259  and  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-22262",
              "help": {
                "text": "Vulnerability CVE-2024-22262\nSeverity: HIGH\nPackage: org.springframework:spring-web\nFixed Version: 5.3.34, 6.0.19, 6.1.6\nLink: [CVE-2024-22262](https://avd.aquasec.com/nvd/cve-2024-22262)\nApplications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22259 https://spring.io/security/cve-2024-22259  and  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.\n\n",
                "markdown": "**Vulnerability CVE-2024-22262**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-web|5.3.34, 6.0.19, 6.1.6|[CVE-2024-22262](https://avd.aquasec.com/nvd/cve-2024-22262)|\n\nApplications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22259 https://spring.io/security/cve-2024-22259  and  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-38809",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "org.springframework:spring-web: Spring Framework DoS via conditional HTTP request"
              },
              "fullDescription": {
                "text": "Applications that parse ETags from \u0026#34;If-Match\u0026#34; or \u0026#34;If-None-Match\u0026#34; request headers are vulnerable to DoS attack.\n\nUsers of affected versions should upgrade to the corresponding fixed version.\n\nUsers of older, unsupported versions could enforce a size limit on \u0026#34;If-Match\u0026#34; and \u0026#34;If-None-Match\u0026#34; headers, e.g. through a Filter."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-38809",
              "help": {
                "text": "Vulnerability CVE-2024-38809\nSeverity: MEDIUM\nPackage: org.springframework:spring-web\nFixed Version: 5.3.38, 6.0.23, 6.1.12\nLink: [CVE-2024-38809](https://avd.aquasec.com/nvd/cve-2024-38809)\nApplications that parse ETags from \"If-Match\" or \"If-None-Match\" request headers are vulnerable to DoS attack.\n\nUsers of affected versions should upgrade to the corresponding fixed version.\n\nUsers of older, unsupported versions could enforce a size limit on \"If-Match\" and \"If-None-Match\" headers, e.g. through a Filter.",
                "markdown": "**Vulnerability CVE-2024-38809**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|org.springframework:spring-web|5.3.38, 6.0.23, 6.1.12|[CVE-2024-38809](https://avd.aquasec.com/nvd/cve-2024-38809)|\n\nApplications that parse ETags from \"If-Match\" or \"If-None-Match\" request headers are vulnerable to DoS attack.\n\nUsers of affected versions should upgrade to the corresponding fixed version.\n\nUsers of older, unsupported versions could enforce a size limit on \"If-Match\" and \"If-None-Match\" headers, e.g. through a Filter."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2016-9878",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Framework: Directory Traversal in the Spring Framework ResourceServlet"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the ResourceServlet were not properly sanitized and as a result exposed to directory traversal attacks."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-9878",
              "help": {
                "text": "Vulnerability CVE-2016-9878\nSeverity: HIGH\nPackage: org.springframework:spring-webmvc\nFixed Version: 3.2.18, 4.2.9, 4.3.5\nLink: [CVE-2016-9878](https://avd.aquasec.com/nvd/cve-2016-9878)\nAn issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the ResourceServlet were not properly sanitized and as a result exposed to directory traversal attacks.",
                "markdown": "**Vulnerability CVE-2016-9878**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|org.springframework:spring-webmvc|3.2.18, 4.2.9, 4.3.5|[CVE-2016-9878](https://avd.aquasec.com/nvd/cve-2016-9878)|\n\nAn issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the ResourceServlet were not properly sanitized and as a result exposed to directory traversal attacks."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3749",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-axios: Regular expression denial of service in trim function"
              },
              "fullDescription": {
                "text": "axios is vulnerable to Inefficient Regular Expression Complexity"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3749",
              "help": {
                "text": "Vulnerability CVE-2021-3749\nSeverity: HIGH\nPackage: axios\nFixed Version: 0.21.2\nLink: [CVE-2021-3749](https://avd.aquasec.com/nvd/cve-2021-3749)\naxios is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "**Vulnerability CVE-2021-3749**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|axios|0.21.2|[CVE-2021-3749](https://avd.aquasec.com/nvd/cve-2021-3749)|\n\naxios is vulnerable to Inefficient Regular Expression Complexity"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-28168",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-axios: allows an attacker to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address"
              },
              "fullDescription": {
                "text": "Axios NPM package 0.21.0 contains a Server-Side Request Forgery (SSRF) vulnerability where an attacker is able to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-28168",
              "help": {
                "text": "Vulnerability CVE-2020-28168\nSeverity: MEDIUM\nPackage: axios\nFixed Version: 0.21.1\nLink: [CVE-2020-28168](https://avd.aquasec.com/nvd/cve-2020-28168)\nAxios NPM package 0.21.0 contains a Server-Side Request Forgery (SSRF) vulnerability where an attacker is able to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address.",
                "markdown": "**Vulnerability CVE-2020-28168**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|axios|0.21.1|[CVE-2020-28168](https://avd.aquasec.com/nvd/cve-2020-28168)|\n\nAxios NPM package 0.21.0 contains a Server-Side Request Forgery (SSRF) vulnerability where an attacker is able to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45857",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "axios: exposure of confidential data stored in cookies"
              },
              "fullDescription": {
                "text": "An issue discovered in Axios 1.5.1 inadvertently reveals the confidential XSRF-TOKEN stored in cookies by including it in the HTTP header X-XSRF-TOKEN for every request made to any host allowing attackers to view sensitive information."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45857",
              "help": {
                "text": "Vulnerability CVE-2023-45857\nSeverity: MEDIUM\nPackage: axios\nFixed Version: 1.6.0, 0.28.0\nLink: [CVE-2023-45857](https://avd.aquasec.com/nvd/cve-2023-45857)\nAn issue discovered in Axios 1.5.1 inadvertently reveals the confidential XSRF-TOKEN stored in cookies by including it in the HTTP header X-XSRF-TOKEN for every request made to any host allowing attackers to view sensitive information.",
                "markdown": "**Vulnerability CVE-2023-45857**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|axios|1.6.0, 0.28.0|[CVE-2023-45857](https://avd.aquasec.com/nvd/cve-2023-45857)|\n\nAn issue discovered in Axios 1.5.1 inadvertently reveals the confidential XSRF-TOKEN stored in cookies by including it in the HTTP header X-XSRF-TOKEN for every request made to any host allowing attackers to view sensitive information."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-4068",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "braces: fails to limit the number of characters it can handle"
              },
              "fullDescription": {
                "text": "The NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \u0026#34;imbalanced braces\u0026#34; as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4068",
              "help": {
                "text": "Vulnerability CVE-2024-4068\nSeverity: HIGH\nPackage: braces\nFixed Version: 3.0.3\nLink: [CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)\nThe NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "markdown": "**Vulnerability CVE-2024-4068**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|braces|3.0.3|[CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)|\n\nThe NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-38900",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "decode-uri-component: improper input validation resulting in DoS"
              },
              "fullDescription": {
                "text": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-38900",
              "help": {
                "text": "Vulnerability CVE-2022-38900\nSeverity: HIGH\nPackage: decode-uri-component\nFixed Version: 0.2.1\nLink: [CVE-2022-38900](https://avd.aquasec.com/nvd/cve-2022-38900)\ndecode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
                "markdown": "**Vulnerability CVE-2022-38900**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|decode-uri-component|0.2.1|[CVE-2022-38900](https://avd.aquasec.com/nvd/cve-2022-38900)|\n\ndecode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-0155",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "follow-redirects: Exposure of Private Personal Information to an Unauthorized Actor"
              },
              "fullDescription": {
                "text": "follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-0155",
              "help": {
                "text": "Vulnerability CVE-2022-0155\nSeverity: HIGH\nPackage: follow-redirects\nFixed Version: 1.14.7\nLink: [CVE-2022-0155](https://avd.aquasec.com/nvd/cve-2022-0155)\nfollow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor",
                "markdown": "**Vulnerability CVE-2022-0155**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|follow-redirects|1.14.7|[CVE-2022-0155](https://avd.aquasec.com/nvd/cve-2022-0155)|\n\nfollow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-0536",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "follow-redirects: Exposure of Sensitive Information via Authorization Header leak"
              },
              "fullDescription": {
                "text": "Improper Removal of Sensitive Information Before Storage or Transfer in NPM follow-redirects prior to 1.14.8.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-0536",
              "help": {
                "text": "Vulnerability CVE-2022-0536\nSeverity: MEDIUM\nPackage: follow-redirects\nFixed Version: 1.14.8\nLink: [CVE-2022-0536](https://avd.aquasec.com/nvd/cve-2022-0536)\nImproper Removal of Sensitive Information Before Storage or Transfer in NPM follow-redirects prior to 1.14.8.\n\n",
                "markdown": "**Vulnerability CVE-2022-0536**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|follow-redirects|1.14.8|[CVE-2022-0536](https://avd.aquasec.com/nvd/cve-2022-0536)|\n\nImproper Removal of Sensitive Information Before Storage or Transfer in NPM follow-redirects prior to 1.14.8.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-26159",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "follow-redirects: Improper Input Validation due to the improper handling of URLs by the url.parse()"
              },
              "fullDescription": {
                "text": "Versions of the package follow-redirects before 1.15.4 are vulnerable to Improper Input Validation due to the improper handling of URLs by the url.parse() function. When new URL() throws an error, it can be manipulated to misinterpret the hostname. An attacker could exploit this weakness to redirect traffic to a malicious site, potentially leading to information disclosure, phishing attacks, or other security breaches."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-26159",
              "help": {
                "text": "Vulnerability CVE-2023-26159\nSeverity: MEDIUM\nPackage: follow-redirects\nFixed Version: 1.15.4\nLink: [CVE-2023-26159](https://avd.aquasec.com/nvd/cve-2023-26159)\nVersions of the package follow-redirects before 1.15.4 are vulnerable to Improper Input Validation due to the improper handling of URLs by the url.parse() function. When new URL() throws an error, it can be manipulated to misinterpret the hostname. An attacker could exploit this weakness to redirect traffic to a malicious site, potentially leading to information disclosure, phishing attacks, or other security breaches.",
                "markdown": "**Vulnerability CVE-2023-26159**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|follow-redirects|1.15.4|[CVE-2023-26159](https://avd.aquasec.com/nvd/cve-2023-26159)|\n\nVersions of the package follow-redirects before 1.15.4 are vulnerable to Improper Input Validation due to the improper handling of URLs by the url.parse() function. When new URL() throws an error, it can be manipulated to misinterpret the hostname. An attacker could exploit this weakness to redirect traffic to a malicious site, potentially leading to information disclosure, phishing attacks, or other security breaches."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-28849",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "follow-redirects: Possible credential leak"
              },
              "fullDescription": {
                "text": "follow-redirects is an open source, drop-in replacement for Node\u0026#39;s `http` and `https` modules that automatically follows redirects. In affected versions follow-redirects only clears authorization header during cross-domain redirect, but keep the proxy-authentication header which contains credentials too. This vulnerability may lead to credentials leak, but has been addressed in version 1.15.6. Users are advised to upgrade. There are no known workarounds for this vulnerability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28849",
              "help": {
                "text": "Vulnerability CVE-2024-28849\nSeverity: MEDIUM\nPackage: follow-redirects\nFixed Version: 1.15.6\nLink: [CVE-2024-28849](https://avd.aquasec.com/nvd/cve-2024-28849)\nfollow-redirects is an open source, drop-in replacement for Node's `http` and `https` modules that automatically follows redirects. In affected versions follow-redirects only clears authorization header during cross-domain redirect, but keep the proxy-authentication header which contains credentials too. This vulnerability may lead to credentials leak, but has been addressed in version 1.15.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
                "markdown": "**Vulnerability CVE-2024-28849**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|follow-redirects|1.15.6|[CVE-2024-28849](https://avd.aquasec.com/nvd/cve-2024-28849)|\n\nfollow-redirects is an open source, drop-in replacement for Node's `http` and `https` modules that automatically follows redirects. In affected versions follow-redirects only clears authorization header during cross-domain redirect, but keep the proxy-authentication header which contains credentials too. This vulnerability may lead to credentials leak, but has been addressed in version 1.15.6. Users are advised to upgrade. There are no known workarounds for this vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-11358",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jquery: Prototype pollution in object\u0026#39;s prototype leading to denial of service, remote code execution, or property injection"
              },
              "fullDescription": {
                "text": "jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-11358",
              "help": {
                "text": "Vulnerability CVE-2019-11358\nSeverity: MEDIUM\nPackage: jquery\nFixed Version: \u003e=3.4.0\nLink: [CVE-2019-11358](https://avd.aquasec.com/nvd/cve-2019-11358)\njQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.",
                "markdown": "**Vulnerability CVE-2019-11358**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|jquery|\u003e=3.4.0|[CVE-2019-11358](https://avd.aquasec.com/nvd/cve-2019-11358)|\n\njQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-5428",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Modification of Assumed-Immutable Data (MAID)"
              },
              "fullDescription": {
                "text": "Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2019-11358. Reason: This candidate is a duplicate of CVE-2019-11358. Notes: All CVE users should reference CVE-2019-11358 instead of this candidate. All references and descriptions in this candidate have been removed to prevent accidental usage"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-5428",
              "help": {
                "text": "Vulnerability CVE-2019-5428\nSeverity: MEDIUM\nPackage: jquery\nFixed Version: \u003e=3.4.0\nLink: [CVE-2019-5428](https://avd.aquasec.com/nvd/cve-2019-5428)\nRejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2019-11358. Reason: This candidate is a duplicate of CVE-2019-11358. Notes: All CVE users should reference CVE-2019-11358 instead of this candidate. All references and descriptions in this candidate have been removed to prevent accidental usage",
                "markdown": "**Vulnerability CVE-2019-5428**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|jquery|\u003e=3.4.0|[CVE-2019-5428](https://avd.aquasec.com/nvd/cve-2019-5428)|\n\nRejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2019-11358. Reason: This candidate is a duplicate of CVE-2019-11358. Notes: All CVE users should reference CVE-2019-11358 instead of this candidate. All references and descriptions in this candidate have been removed to prevent accidental usage"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-11022",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jquery: Cross-site scripting due to improper injQuery.htmlPrefilter method"
              },
              "fullDescription": {
                "text": "In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery\u0026#39;s DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-11022",
              "help": {
                "text": "Vulnerability CVE-2020-11022\nSeverity: MEDIUM\nPackage: jquery\nFixed Version: 3.5.0\nLink: [CVE-2020-11022](https://avd.aquasec.com/nvd/cve-2020-11022)\nIn jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",
                "markdown": "**Vulnerability CVE-2020-11022**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|jquery|3.5.0|[CVE-2020-11022](https://avd.aquasec.com/nvd/cve-2020-11022)|\n\nIn jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-11023",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jquery: Untrusted code execution via \u0026lt;option\u0026gt; tag in HTML passed to DOM manipulation methods"
              },
              "fullDescription": {
                "text": "In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing \u0026lt;option\u0026gt; elements from untrusted sources - even after sanitizing it - to one of jQuery\u0026#39;s DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-11023",
              "help": {
                "text": "Vulnerability CVE-2020-11023\nSeverity: MEDIUM\nPackage: jquery\nFixed Version: 3.5.0\nLink: [CVE-2020-11023](https://avd.aquasec.com/nvd/cve-2020-11023)\nIn jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing \u003coption\u003e elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",
                "markdown": "**Vulnerability CVE-2020-11023**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|jquery|3.5.0|[CVE-2020-11023](https://avd.aquasec.com/nvd/cve-2020-11023)|\n\nIn jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing \u003coption\u003e elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-46175",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "json5: Prototype Pollution in JSON5 via Parse Method"
              },
              "fullDescription": {
                "text": "JSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-46175",
              "help": {
                "text": "Vulnerability CVE-2022-46175\nSeverity: HIGH\nPackage: json5\nFixed Version: 2.2.2, 1.0.2\nLink: [CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)\nJSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later.",
                "markdown": "**Vulnerability CVE-2022-46175**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|json5|2.2.2, 1.0.2|[CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)|\n\nJSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-37601",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "loader-utils: prototype pollution in function parseQuery in parseQuery.js"
              },
              "fullDescription": {
                "text": "Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils 2.0.0 via the name variable in parseQuery.js."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-37601",
              "help": {
                "text": "Vulnerability CVE-2022-37601\nSeverity: CRITICAL\nPackage: loader-utils\nFixed Version: 2.0.3, 1.4.1\nLink: [CVE-2022-37601](https://avd.aquasec.com/nvd/cve-2022-37601)\nPrototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils 2.0.0 via the name variable in parseQuery.js.",
                "markdown": "**Vulnerability CVE-2022-37601**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|loader-utils|2.0.3, 1.4.1|[CVE-2022-37601](https://avd.aquasec.com/nvd/cve-2022-37601)|\n\nPrototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils 2.0.0 via the name variable in parseQuery.js."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-37599",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "loader-utils: regular expression denial of service in interpolateName.js"
              },
              "fullDescription": {
                "text": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the resourcePath variable in interpolateName.js."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-37599",
              "help": {
                "text": "Vulnerability CVE-2022-37599\nSeverity: HIGH\nPackage: loader-utils\nFixed Version: 1.4.2, 2.0.4, 3.2.1\nLink: [CVE-2022-37599](https://avd.aquasec.com/nvd/cve-2022-37599)\nA Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the resourcePath variable in interpolateName.js.",
                "markdown": "**Vulnerability CVE-2022-37599**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|loader-utils|1.4.2, 2.0.4, 3.2.1|[CVE-2022-37599](https://avd.aquasec.com/nvd/cve-2022-37599)|\n\nA Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the resourcePath variable in interpolateName.js."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-37603",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "loader-utils: Regular expression denial of service"
              },
              "fullDescription": {
                "text": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-37603",
              "help": {
                "text": "Vulnerability CVE-2022-37603\nSeverity: HIGH\nPackage: loader-utils\nFixed Version: 1.4.2, 2.0.4, 3.2.1\nLink: [CVE-2022-37603](https://avd.aquasec.com/nvd/cve-2022-37603)\nA Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js.",
                "markdown": "**Vulnerability CVE-2022-37603**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|loader-utils|1.4.2, 2.0.4, 3.2.1|[CVE-2022-37603](https://avd.aquasec.com/nvd/cve-2022-37603)|\n\nA Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-4067",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "micromatch: vulnerable to Regular Expression Denial of Service"
              },
              "fullDescription": {
                "text": "The NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn\u0026#39;t find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won\u0026#39;t start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4067",
              "help": {
                "text": "Vulnerability CVE-2024-4067\nSeverity: MEDIUM\nPackage: micromatch\nFixed Version: 4.0.8\nLink: [CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)\nThe NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8.",
                "markdown": "**Vulnerability CVE-2024-4067**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|micromatch|4.0.8|[CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)|\n\nThe NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2017-18214",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-moment: Regular expression denial of service"
              },
              "fullDescription": {
                "text": "The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-18214",
              "help": {
                "text": "Vulnerability CVE-2017-18214\nSeverity: HIGH\nPackage: moment\nFixed Version: 2.19.3\nLink: [CVE-2017-18214](https://avd.aquasec.com/nvd/cve-2017-18214)\nThe moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",
                "markdown": "**Vulnerability CVE-2017-18214**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|moment|2.19.3|[CVE-2017-18214](https://avd.aquasec.com/nvd/cve-2017-18214)|\n\nThe moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24785",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Moment.js: Path traversal  in moment.locale"
              },
              "fullDescription": {
                "text": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24785",
              "help": {
                "text": "Vulnerability CVE-2022-24785\nSeverity: HIGH\nPackage: moment\nFixed Version: 2.29.2\nLink: [CVE-2022-24785](https://avd.aquasec.com/nvd/cve-2022-24785)\nMoment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",
                "markdown": "**Vulnerability CVE-2022-24785**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|moment|2.29.2|[CVE-2022-24785](https://avd.aquasec.com/nvd/cve-2022-24785)|\n\nMoment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-31129",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moment: inefficient parsing algorithm resulting in DoS"
              },
              "fullDescription": {
                "text": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-31129",
              "help": {
                "text": "Vulnerability CVE-2022-31129\nSeverity: HIGH\nPackage: moment\nFixed Version: 2.29.4\nLink: [CVE-2022-31129](https://avd.aquasec.com/nvd/cve-2022-31129)\nmoment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input.",
                "markdown": "**Vulnerability CVE-2022-31129**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|moment|2.29.4|[CVE-2022-31129](https://avd.aquasec.com/nvd/cve-2022-31129)|\n\nmoment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-0235",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-fetch: exposure of sensitive information to an unauthorized actor"
              },
              "fullDescription": {
                "text": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-0235",
              "help": {
                "text": "Vulnerability CVE-2022-0235\nSeverity: HIGH\nPackage: node-fetch\nFixed Version: 3.1.1, 2.6.7\nLink: [CVE-2022-0235](https://avd.aquasec.com/nvd/cve-2022-0235)\nnode-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
                "markdown": "**Vulnerability CVE-2022-0235**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|node-fetch|3.1.1, 2.6.7|[CVE-2022-0235](https://avd.aquasec.com/nvd/cve-2022-0235)|\n\nnode-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-29180",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "webpack-dev-middleware: lack of URL validation may lead to file leak"
              },
              "fullDescription": {
                "text": "Prior to versions 7.1.0, 6.1.2, and 5.3.4, the webpack-dev-middleware development middleware for devpack does not validate the supplied URL address sufficiently before returning the local file. It is possible to access any file on the developer\u0026#39;s machine. The middleware can either work with the physical filesystem when reading the files or it can use a virtualized in-memory `memfs` filesystem. If `writeToDisk` configuration option is set to `true`, the physical filesystem is used. The `getFilenameFromUrl` method is used to parse URL and build the local file path. The public path prefix is stripped from the URL, and the `unsecaped` path suffix is appended to the `outputPath`. As the URL is not unescaped and normalized automatically before calling the midlleware, it is possible to use `%2e` and `%2f` sequences to perform path traversal attack.\n\nDevelopers using `webpack-dev-server` or `webpack-dev-middleware` are affected by the issue. When the project is started, an attacker might access any file on the developer\u0026#39;s machine and exfiltrate the content. If the development server is listening on a public IP address (or `0.0.0.0`), an attacker on the local network can access the local files without any interaction from the victim (direct connection to the port). If the server allows access from third-party domains, an attacker can send a malicious link to the victim. When visited, the client side script can connect to the local server and exfiltrate the local files. Starting with fixed versions 7.1.0, 6.1.2, and 5.3.4, the URL is unescaped and normalized before any further processing."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29180",
              "help": {
                "text": "Vulnerability CVE-2024-29180\nSeverity: HIGH\nPackage: webpack-dev-middleware\nFixed Version: 7.1.0, 6.1.2, 5.3.4\nLink: [CVE-2024-29180](https://avd.aquasec.com/nvd/cve-2024-29180)\nPrior to versions 7.1.0, 6.1.2, and 5.3.4, the webpack-dev-middleware development middleware for devpack does not validate the supplied URL address sufficiently before returning the local file. It is possible to access any file on the developer's machine. The middleware can either work with the physical filesystem when reading the files or it can use a virtualized in-memory `memfs` filesystem. If `writeToDisk` configuration option is set to `true`, the physical filesystem is used. The `getFilenameFromUrl` method is used to parse URL and build the local file path. The public path prefix is stripped from the URL, and the `unsecaped` path suffix is appended to the `outputPath`. As the URL is not unescaped and normalized automatically before calling the midlleware, it is possible to use `%2e` and `%2f` sequences to perform path traversal attack.\n\nDevelopers using `webpack-dev-server` or `webpack-dev-middleware` are affected by the issue. When the project is started, an attacker might access any file on the developer's machine and exfiltrate the content. If the development server is listening on a public IP address (or `0.0.0.0`), an attacker on the local network can access the local files without any interaction from the victim (direct connection to the port). If the server allows access from third-party domains, an attacker can send a malicious link to the victim. When visited, the client side script can connect to the local server and exfiltrate the local files. Starting with fixed versions 7.1.0, 6.1.2, and 5.3.4, the URL is unescaped and normalized before any further processing.",
                "markdown": "**Vulnerability CVE-2024-29180**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|webpack-dev-middleware|7.1.0, 6.1.2, 5.3.4|[CVE-2024-29180](https://avd.aquasec.com/nvd/cve-2024-29180)|\n\nPrior to versions 7.1.0, 6.1.2, and 5.3.4, the webpack-dev-middleware development middleware for devpack does not validate the supplied URL address sufficiently before returning the local file. It is possible to access any file on the developer's machine. The middleware can either work with the physical filesystem when reading the files or it can use a virtualized in-memory `memfs` filesystem. If `writeToDisk` configuration option is set to `true`, the physical filesystem is used. The `getFilenameFromUrl` method is used to parse URL and build the local file path. The public path prefix is stripped from the URL, and the `unsecaped` path suffix is appended to the `outputPath`. As the URL is not unescaped and normalized automatically before calling the midlleware, it is possible to use `%2e` and `%2f` sequences to perform path traversal attack.\n\nDevelopers using `webpack-dev-server` or `webpack-dev-middleware` are affected by the issue. When the project is started, an attacker might access any file on the developer's machine and exfiltrate the content. If the development server is listening on a public IP address (or `0.0.0.0`), an attacker on the local network can access the local files without any interaction from the victim (direct connection to the port). If the server allows access from third-party domains, an attacker can send a malicious link to the victim. When visited, the client side script can connect to the local server and exfiltrate the local files. Starting with fixed versions 7.1.0, 6.1.2, and 5.3.4, the URL is unescaped and normalized before any further processing."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-30861",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "flask: Possible disclosure of permanent session cookie due to missing Vary: Cookie header"
              },
              "fullDescription": {
                "text": "Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client\u0026#39;s `session` cookie to other clients. The severity depends on the application\u0026#39;s use of the session and the proxy\u0026#39;s behavior regarding cookies. The risk depends on all these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets `session.permanent = True`\n3. The application does not access or modify the session at any point during a request.\n4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-30861",
              "help": {
                "text": "Vulnerability CVE-2023-30861\nSeverity: HIGH\nPackage: Flask\nFixed Version: 2.3.2, 2.2.5\nLink: [CVE-2023-30861](https://avd.aquasec.com/nvd/cve-2023-30861)\nFlask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets `session.permanent = True`\n3. The application does not access or modify the session at any point during a request.\n4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",
                "markdown": "**Vulnerability CVE-2023-30861**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Flask|2.3.2, 2.2.5|[CVE-2023-30861](https://avd.aquasec.com/nvd/cve-2023-30861)|\n\nFlask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets `session.permanent = True`\n3. The application does not access or modify the session at any point during a request.\n4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-6221",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "A vulnerability in corydolphin/flask-cors version 4.0.1 allows the `Ac ..."
              },
              "fullDescription": {
                "text": "A vulnerability in corydolphin/flask-cors version 4.0.1 allows the `Access-Control-Allow-Private-Network` CORS header to be set to true by default, without any configuration option. This behavior can expose private network resources to unauthorized external access, leading to significant security risks such as data breaches, unauthorized access to sensitive information, and potential network intrusions."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-6221",
              "help": {
                "text": "Vulnerability CVE-2024-6221\nSeverity: HIGH\nPackage: Flask-Cors\nFixed Version: 4.0.2\nLink: [CVE-2024-6221](https://avd.aquasec.com/nvd/cve-2024-6221)\nA vulnerability in corydolphin/flask-cors version 4.0.1 allows the `Access-Control-Allow-Private-Network` CORS header to be set to true by default, without any configuration option. This behavior can expose private network resources to unauthorized external access, leading to significant security risks such as data breaches, unauthorized access to sensitive information, and potential network intrusions.",
                "markdown": "**Vulnerability CVE-2024-6221**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Flask-Cors|4.0.2|[CVE-2024-6221](https://avd.aquasec.com/nvd/cve-2024-6221)|\n\nA vulnerability in corydolphin/flask-cors version 4.0.1 allows the `Access-Control-Allow-Private-Network` CORS header to be set to true by default, without any configuration option. This behavior can expose private network resources to unauthorized external access, leading to significant security risks such as data breaches, unauthorized access to sensitive information, and potential network intrusions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-1681",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "corydolphin/flask-cors is vulnerable to log injection when the log lev ..."
              },
              "fullDescription": {
                "text": "corydolphin/flask-cors is vulnerable to log injection when the log level is set to debug. An attacker can inject fake log entries into the log file by sending a specially crafted GET request containing a CRLF sequence in the request path. This vulnerability allows attackers to corrupt log files, potentially covering tracks of other attacks, confusing log post-processing tools, and forging log entries. The issue is due to improper output neutralization for logs."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-1681",
              "help": {
                "text": "Vulnerability CVE-2024-1681\nSeverity: MEDIUM\nPackage: Flask-Cors\nFixed Version: 4.0.1\nLink: [CVE-2024-1681](https://avd.aquasec.com/nvd/cve-2024-1681)\ncorydolphin/flask-cors is vulnerable to log injection when the log level is set to debug. An attacker can inject fake log entries into the log file by sending a specially crafted GET request containing a CRLF sequence in the request path. This vulnerability allows attackers to corrupt log files, potentially covering tracks of other attacks, confusing log post-processing tools, and forging log entries. The issue is due to improper output neutralization for logs.",
                "markdown": "**Vulnerability CVE-2024-1681**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Flask-Cors|4.0.1|[CVE-2024-1681](https://avd.aquasec.com/nvd/cve-2024-1681)|\n\ncorydolphin/flask-cors is vulnerable to log injection when the log level is set to debug. An attacker can inject fake log entries into the log file by sending a specially crafted GET request containing a CRLF sequence in the request path. This vulnerability allows attackers to corrupt log files, potentially covering tracks of other attacks, confusing log post-processing tools, and forging log entries. The issue is due to improper output neutralization for logs."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-28493",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-jinja2: ReDoS vulnerability in the urlize filter"
              },
              "fullDescription": {
                "text": "This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-28493",
              "help": {
                "text": "Vulnerability CVE-2020-28493\nSeverity: MEDIUM\nPackage: Jinja2\nFixed Version: 2.11.3\nLink: [CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)\nThis affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",
                "markdown": "**Vulnerability CVE-2020-28493**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Jinja2|2.11.3|[CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)|\n\nThis affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-22195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: HTML attribute injection when passing user input as keys to xmlattr filter"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-22195",
              "help": {
                "text": "Vulnerability CVE-2024-22195\nSeverity: MEDIUM\nPackage: Jinja2\nFixed Version: 3.1.3\nLink: [CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)\nJinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.\n",
                "markdown": "**Vulnerability CVE-2024-22195**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Jinja2|3.1.3|[CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)|\n\nJinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-34064",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: accepts keys containing non-attribute characters"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u0026gt;`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-34064",
              "help": {
                "text": "Vulnerability CVE-2024-34064\nSeverity: MEDIUM\nPackage: Jinja2\nFixed Version: 3.1.4\nLink: [CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)\nJinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u003e`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4.",
                "markdown": "**Vulnerability CVE-2024-34064**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Jinja2|3.1.4|[CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)|\n\nJinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u003e`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-29217",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-jwt: Key confusion through non-blocklisted public key formats"
              },
              "fullDescription": {
                "text": "PyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29217",
              "help": {
                "text": "Vulnerability CVE-2022-29217\nSeverity: HIGH\nPackage: PyJWT\nFixed Version: 2.4.0\nLink: [CVE-2022-29217](https://avd.aquasec.com/nvd/cve-2022-29217)\nPyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding.",
                "markdown": "**Vulnerability CVE-2022-29217**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|PyJWT|2.4.0|[CVE-2022-29217](https://avd.aquasec.com/nvd/cve-2022-29217)|\n\nPyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-25577",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-werkzeug: high resource usage when parsing multipart form data with many fields"
              },
              "fullDescription": {
                "text": "Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug\u0026#39;s multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-25577",
              "help": {
                "text": "Vulnerability CVE-2023-25577\nSeverity: HIGH\nPackage: Werkzeug\nFixed Version: 2.2.3\nLink: [CVE-2023-25577](https://avd.aquasec.com/nvd/cve-2023-25577)\nWerkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.",
                "markdown": "**Vulnerability CVE-2023-25577**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Werkzeug|2.2.3|[CVE-2023-25577](https://avd.aquasec.com/nvd/cve-2023-25577)|\n\nWerkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-34069",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-werkzeug: user may execute code on a developer\u0026#39;s machine"
              },
              "fullDescription": {
                "text": "Werkzeug is a comprehensive WSGI web application library. The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer\u0026#39;s machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer\u0026#39;s application that will trigger the debugger. This vulnerability is fixed in 3.0.3."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-34069",
              "help": {
                "text": "Vulnerability CVE-2024-34069\nSeverity: HIGH\nPackage: Werkzeug\nFixed Version: 3.0.3\nLink: [CVE-2024-34069](https://avd.aquasec.com/nvd/cve-2024-34069)\nWerkzeug is a comprehensive WSGI web application library. The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger. This vulnerability is fixed in 3.0.3.",
                "markdown": "**Vulnerability CVE-2024-34069**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Werkzeug|3.0.3|[CVE-2024-34069](https://avd.aquasec.com/nvd/cve-2024-34069)|\n\nWerkzeug is a comprehensive WSGI web application library. The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger. This vulnerability is fixed in 3.0.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-46136",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-werkzeug: high resource consumption leading to denial of service"
              },
              "fullDescription": {
                "text": "Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-46136",
              "help": {
                "text": "Vulnerability CVE-2023-46136\nSeverity: MEDIUM\nPackage: Werkzeug\nFixed Version: 3.0.1, 2.3.8\nLink: [CVE-2023-46136](https://avd.aquasec.com/nvd/cve-2023-46136)\nWerkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1.",
                "markdown": "**Vulnerability CVE-2023-46136**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Werkzeug|3.0.1, 2.3.8|[CVE-2023-46136](https://avd.aquasec.com/nvd/cve-2023-46136)|\n\nWerkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-49766",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "werkzeug: python-werkzeug: Werkzeug safe_join not safe on Windows"
              },
              "fullDescription": {
                "text": "Werkzeug is a Web Server Gateway Interface web application library. On Python \u0026lt; 3.11 on Windows, os.path.isabs() does not catch UNC paths like //server/share. Werkzeug\u0026#39;s safe_join() relies on this check, and so can produce a path that is not safe, potentially allowing unintended access to data. Applications using Python \u0026gt;= 3.11, or not using Windows, are not vulnerable. Werkzeug version 3.0.6 contains a patch."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-49766",
              "help": {
                "text": "Vulnerability CVE-2024-49766\nSeverity: MEDIUM\nPackage: Werkzeug\nFixed Version: 3.0.6\nLink: [CVE-2024-49766](https://avd.aquasec.com/nvd/cve-2024-49766)\nWerkzeug is a Web Server Gateway Interface web application library. On Python \u003c 3.11 on Windows, os.path.isabs() does not catch UNC paths like //server/share. Werkzeug's safe_join() relies on this check, and so can produce a path that is not safe, potentially allowing unintended access to data. Applications using Python \u003e= 3.11, or not using Windows, are not vulnerable. Werkzeug version 3.0.6 contains a patch.",
                "markdown": "**Vulnerability CVE-2024-49766**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Werkzeug|3.0.6|[CVE-2024-49766](https://avd.aquasec.com/nvd/cve-2024-49766)|\n\nWerkzeug is a Web Server Gateway Interface web application library. On Python \u003c 3.11 on Windows, os.path.isabs() does not catch UNC paths like //server/share. Werkzeug's safe_join() relies on this check, and so can produce a path that is not safe, potentially allowing unintended access to data. Applications using Python \u003e= 3.11, or not using Windows, are not vulnerable. Werkzeug version 3.0.6 contains a patch."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-49767",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "werkzeug: python-werkzeug: Werkzeug possible resource exhaustion when parsing file data in forms"
              },
              "fullDescription": {
                "text": "Werkzeug is a Web Server Gateway Interface web application library. Applications using `werkzeug.formparser.MultiPartParser` corresponding to a version of Werkzeug prior to 3.0.6 to parse `multipart/form-data` requests (e.g. all flask applications) are vulnerable to a relatively simple but effective resource exhaustion (denial of service) attack. A specifically crafted form submission request can cause the parser to allocate and block 3 to 8 times the upload size in main memory. There is no upper limit; a single upload at 1 Gbit/s can exhaust 32 GB of RAM in less than 60 seconds. Werkzeug version 3.0.6 fixes this issue."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-49767",
              "help": {
                "text": "Vulnerability CVE-2024-49767\nSeverity: MEDIUM\nPackage: Werkzeug\nFixed Version: 3.0.6\nLink: [CVE-2024-49767](https://avd.aquasec.com/nvd/cve-2024-49767)\nWerkzeug is a Web Server Gateway Interface web application library. Applications using `werkzeug.formparser.MultiPartParser` corresponding to a version of Werkzeug prior to 3.0.6 to parse `multipart/form-data` requests (e.g. all flask applications) are vulnerable to a relatively simple but effective resource exhaustion (denial of service) attack. A specifically crafted form submission request can cause the parser to allocate and block 3 to 8 times the upload size in main memory. There is no upper limit; a single upload at 1 Gbit/s can exhaust 32 GB of RAM in less than 60 seconds. Werkzeug version 3.0.6 fixes this issue.",
                "markdown": "**Vulnerability CVE-2024-49767**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Werkzeug|3.0.6|[CVE-2024-49767](https://avd.aquasec.com/nvd/cve-2024-49767)|\n\nWerkzeug is a Web Server Gateway Interface web application library. Applications using `werkzeug.formparser.MultiPartParser` corresponding to a version of Werkzeug prior to 3.0.6 to parse `multipart/form-data` requests (e.g. all flask applications) are vulnerable to a relatively simple but effective resource exhaustion (denial of service) attack. A specifically crafted form submission request can cause the parser to allocate and block 3 to 8 times the upload size in main memory. There is no upper limit; a single upload at 1 Gbit/s can exhaust 32 GB of RAM in less than 60 seconds. Werkzeug version 3.0.6 fixes this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-23934",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-werkzeug: cookie prefixed with = can shadow unprefixed cookie"
              },
              "fullDescription": {
                "text": "Werkzeug is a comprehensive WSGI web application library. Browsers may allow \u0026#34;nameless\u0026#34; cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-23934",
              "help": {
                "text": "Vulnerability CVE-2023-23934\nSeverity: LOW\nPackage: Werkzeug\nFixed Version: 2.2.3\nLink: [CVE-2023-23934](https://avd.aquasec.com/nvd/cve-2023-23934)\nWerkzeug is a comprehensive WSGI web application library. Browsers may allow \"nameless\" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",
                "markdown": "**Vulnerability CVE-2023-23934**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|Werkzeug|2.2.3|[CVE-2023-23934](https://avd.aquasec.com/nvd/cve-2023-23934)|\n\nWerkzeug is a comprehensive WSGI web application library. Browsers may allow \"nameless\" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-37920",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-certifi: Removal of e-Tugra root certificate"
              },
              "fullDescription": {
                "text": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \u0026#34;e-Tugra\u0026#34; root certificates. e-Tugra\u0026#39;s root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \u0026#34;e-Tugra\u0026#34; from the root store."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-37920",
              "help": {
                "text": "Vulnerability CVE-2023-37920\nSeverity: HIGH\nPackage: certifi\nFixed Version: 2023.7.22\nLink: [CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \"e-Tugra\" root certificates. e-Tugra's root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store.",
                "markdown": "**Vulnerability CVE-2023-37920**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|certifi|2023.7.22|[CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)|\n\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \"e-Tugra\" root certificates. e-Tugra's root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23491",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-certifi: untrusted root certificates"
              },
              "fullDescription": {
                "text": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \u0026#34;TrustCor\u0026#34; from the root store. These are in the process of being removed from Mozilla\u0026#39;s trust store. TrustCor\u0026#39;s root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor\u0026#39;s ownership also operated a business that produced spyware. Conclusions of Mozilla\u0026#39;s investigation can be found in the linked google group discussion."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23491",
              "help": {
                "text": "Vulnerability CVE-2022-23491\nSeverity: MEDIUM\nPackage: certifi\nFixed Version: 2022.12.07\nLink: [CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion.",
                "markdown": "**Vulnerability CVE-2022-23491**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|certifi|2022.12.07|[CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)|\n\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-41419",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-gevent: privilege escalation via a crafted script to the WSGIServer component"
              },
              "fullDescription": {
                "text": "An issue in Gevent before version 23.9.0 allows a remote attacker to escalate privileges via a crafted script to the WSGIServer component."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-41419",
              "help": {
                "text": "Vulnerability CVE-2023-41419\nSeverity: CRITICAL\nPackage: gevent\nFixed Version: 23.9.0\nLink: [CVE-2023-41419](https://avd.aquasec.com/nvd/cve-2023-41419)\nAn issue in Gevent before version 23.9.0 allows a remote attacker to escalate privileges via a crafted script to the WSGIServer component.",
                "markdown": "**Vulnerability CVE-2023-41419**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|gevent|23.9.0|[CVE-2023-41419](https://avd.aquasec.com/nvd/cve-2023-41419)|\n\nAn issue in Gevent before version 23.9.0 allows a remote attacker to escalate privileges via a crafted script to the WSGIServer component."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-3651",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-idna: potential DoS via resource consumption via specially crafted inputs to idna.encode()"
              },
              "fullDescription": {
                "text": "A vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function\u0026#39;s handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-3651",
              "help": {
                "text": "Vulnerability CVE-2024-3651\nSeverity: MEDIUM\nPackage: idna\nFixed Version: 3.7\nLink: [CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)\nA vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size.",
                "markdown": "**Vulnerability CVE-2024-3651**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|idna|3.7|[CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)|\n\nA vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-42969",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "py: ReDoS in py library when used with subversion"
              },
              "fullDescription": {
                "text": "The py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled. Note: This has been disputed by multiple third parties as not being reproduceable and they argue this is not a valid vulnerability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-42969",
              "help": {
                "text": "Vulnerability CVE-2022-42969\nSeverity: HIGH\nPackage: py\nFixed Version: \nLink: [CVE-2022-42969](https://avd.aquasec.com/nvd/cve-2022-42969)\nThe py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled. Note: This has been disputed by multiple third parties as not being reproduceable and they argue this is not a valid vulnerability.",
                "markdown": "**Vulnerability CVE-2022-42969**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|py||[CVE-2022-42969](https://avd.aquasec.com/nvd/cve-2022-42969)|\n\nThe py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled. Note: This has been disputed by multiple third parties as not being reproduceable and they argue this is not a valid vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-32681",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-requests: Unintended leak of Proxy-Authorization header"
              },
              "fullDescription": {
                "text": "Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-32681",
              "help": {
                "text": "Vulnerability CVE-2023-32681\nSeverity: MEDIUM\nPackage: requests\nFixed Version: 2.31.0\nLink: [CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)\nRequests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n",
                "markdown": "**Vulnerability CVE-2023-32681**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|requests|2.31.0|[CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)|\n\nRequests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-35195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "requests: subsequent requests to the same host ignore cert verification"
              },
              "fullDescription": {
                "text": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-35195",
              "help": {
                "text": "Vulnerability CVE-2024-35195\nSeverity: MEDIUM\nPackage: requests\nFixed Version: 2.32.0\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)\nRequests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
                "markdown": "**Vulnerability CVE-2024-35195**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|requests|2.32.0|[CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)|\n\nRequests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-33503",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: ReDoS in the parsing of authority part of URL"
              },
              "fullDescription": {
                "text": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33503",
              "help": {
                "text": "Vulnerability CVE-2021-33503\nSeverity: HIGH\nPackage: urllib3\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)\nAn issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.",
                "markdown": "**Vulnerability CVE-2021-33503**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|urllib3|1.26.5|[CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)|\n\nAn issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-43804",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: Cookie request header isn\u0026#39;t stripped during cross-origin redirects"
              },
              "fullDescription": {
                "text": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn\u0026#39;t treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn\u0026#39;t disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-43804",
              "help": {
                "text": "Vulnerability CVE-2023-43804\nSeverity: HIGH\nPackage: urllib3\nFixed Version: 2.0.6, 1.26.17\nLink: [CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)\nurllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
                "markdown": "**Vulnerability CVE-2023-43804**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|urllib3|2.0.6, 1.26.17|[CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)|\n\nurllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-28363",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: HTTPS proxy host name not validated when using default SSLContext"
              },
              "fullDescription": {
                "text": "The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn\u0026#39;t given via proxy_config) doesn\u0026#39;t verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28363",
              "help": {
                "text": "Vulnerability CVE-2021-28363\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 1.26.4\nLink: [CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)\nThe urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.",
                "markdown": "**Vulnerability CVE-2021-28363**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|1.26.4|[CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)|\n\nThe urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45803",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "urllib3: Request body not stripped after redirect from 303 status changes request method to GET"
              },
              "fullDescription": {
                "text": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn\u0026#39;t remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren\u0026#39;t putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn\u0026#39;t exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren\u0026#39;t expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45803",
              "help": {
                "text": "Vulnerability CVE-2023-45803\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 2.0.7, 1.26.18\nLink: [CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)\nurllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n",
                "markdown": "**Vulnerability CVE-2023-45803**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|2.0.7, 1.26.18|[CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)|\n\nurllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-37891",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "urllib3: proxy-authorization request header is not stripped during cross-origin redirects"
              },
              "fullDescription": {
                "text": " urllib3 is a user-friendly HTTP client library for Python. When using urllib3\u0026#39;s proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3\u0026#39;s proxy support, it\u0026#39;s possible to accidentally configure the `Proxy-Authorization` header even though it won\u0026#39;t have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn\u0026#39;t treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn\u0026#39;t strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3\u0026#39;s proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren\u0026#39;t using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3\u0026#39;s built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3\u0026#39;s `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-37891",
              "help": {
                "text": "Vulnerability CVE-2024-37891\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 1.26.19, 2.2.2\nLink: [CVE-2024-37891](https://avd.aquasec.com/nvd/cve-2024-37891)\n urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
                "markdown": "**Vulnerability CVE-2024-37891**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|1.26.19, 2.2.2|[CVE-2024-37891](https://avd.aquasec.com/nvd/cve-2024-37891)|\n\n urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "DS002",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Image user should not be \u0026#39;root\u0026#39;"
              },
              "fullDescription": {
                "text": "Running containers with \u0026#39;root\u0026#39; user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a \u0026#39;USER\u0026#39; statement to the Dockerfile."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds002",
              "help": {
                "text": "Misconfiguration DS002\nType: Dockerfile Security Check\nSeverity: HIGH\nCheck: Image user should not be 'root'\nMessage: Specify at least 1 USER command in Dockerfile with non-root user as argument\nLink: [DS002](https://avd.aquasec.com/misconfig/ds002)\nRunning containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
                "markdown": "**Misconfiguration DS002**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|HIGH|Image user should not be 'root'|Specify at least 1 USER command in Dockerfile with non-root user as argument|[DS002](https://avd.aquasec.com/misconfig/ds002)|\n\nRunning containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "DS005",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "ADD instead of COPY"
              },
              "fullDescription": {
                "text": "You should use COPY instead of ADD unless you want to extract a tar file. Note that an ADD command will extract a tar file, which adds the risk of Zip-based vulnerabilities. Accordingly, it is advised to use a COPY command, which does not extract tar files."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds005",
              "help": {
                "text": "Misconfiguration DS005\nType: Dockerfile Security Check\nSeverity: LOW\nCheck: ADD instead of COPY\nMessage: Consider using 'COPY main.py /main.py' command instead of 'ADD main.py /main.py'\nLink: [DS005](https://avd.aquasec.com/misconfig/ds005)\nYou should use COPY instead of ADD unless you want to extract a tar file. Note that an ADD command will extract a tar file, which adds the risk of Zip-based vulnerabilities. Accordingly, it is advised to use a COPY command, which does not extract tar files.",
                "markdown": "**Misconfiguration DS005**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|LOW|ADD instead of COPY|Consider using 'COPY main.py /main.py' command instead of 'ADD main.py /main.py'|[DS005](https://avd.aquasec.com/misconfig/ds005)|\n\nYou should use COPY instead of ADD unless you want to extract a tar file. Note that an ADD command will extract a tar file, which adds the risk of Zip-based vulnerabilities. Accordingly, it is advised to use a COPY command, which does not extract tar files."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "DS025",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "\u0026#39;apk add\u0026#39; is missing \u0026#39;--no-cache\u0026#39;"
              },
              "fullDescription": {
                "text": "You should use \u0026#39;apk add\u0026#39; with \u0026#39;--no-cache\u0026#39; to clean package cached data and reduce image size."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds025",
              "help": {
                "text": "Misconfiguration DS025\nType: Dockerfile Security Check\nSeverity: HIGH\nCheck: 'apk add' is missing '--no-cache'\nMessage: '--no-cache' is missed: apk add --update curl\nLink: [DS025](https://avd.aquasec.com/misconfig/ds025)\nYou should use 'apk add' with '--no-cache' to clean package cached data and reduce image size.",
                "markdown": "**Misconfiguration DS025**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|HIGH|'apk add' is missing '--no-cache'|'--no-cache' is missed: apk add --update curl|[DS025](https://avd.aquasec.com/misconfig/ds025)|\n\nYou should use 'apk add' with '--no-cache' to clean package cached data and reduce image size."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "DS026",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "No HEALTHCHECK defined"
              },
              "fullDescription": {
                "text": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds026",
              "help": {
                "text": "Misconfiguration DS026\nType: Dockerfile Security Check\nSeverity: LOW\nCheck: No HEALTHCHECK defined\nMessage: Add HEALTHCHECK instruction in your Dockerfile\nLink: [DS026](https://avd.aquasec.com/misconfig/ds026)\nYou should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
                "markdown": "**Misconfiguration DS026**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|LOW|No HEALTHCHECK defined|Add HEALTHCHECK instruction in your Dockerfile|[DS026](https://avd.aquasec.com/misconfig/ds026)|\n\nYou should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "AVD-AWS-0077",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "RDS Cluster and RDS instance should have backup retention longer than default 1 day"
              },
              "fullDescription": {
                "text": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0077",
              "help": {
                "text": "Misconfiguration AVD-AWS-0077\nType: Terraform Security Check\nSeverity: MEDIUM\nCheck: RDS Cluster and RDS instance should have backup retention longer than default 1 day\nMessage: Instance has very low backup retention period.\nLink: [AVD-AWS-0077](https://avd.aquasec.com/misconfig/avd-aws-0077)\nRDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.\n",
                "markdown": "**Misconfiguration AVD-AWS-0077**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Terraform Security Check|MEDIUM|RDS Cluster and RDS instance should have backup retention longer than default 1 day|Instance has very low backup retention period.|[AVD-AWS-0077](https://avd.aquasec.com/misconfig/avd-aws-0077)|\n\nRDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "AVD-AWS-0080",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "RDS encryption has not been enabled at a DB Instance level."
              },
              "fullDescription": {
                "text": "Encryption should be enabled for an RDS Database instances.\nWhen enabling encryption by setting the kms_key_id.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0080",
              "help": {
                "text": "Misconfiguration AVD-AWS-0080\nType: Terraform Security Check\nSeverity: HIGH\nCheck: RDS encryption has not been enabled at a DB Instance level.\nMessage: Instance does not have storage encryption enabled.\nLink: [AVD-AWS-0080](https://avd.aquasec.com/misconfig/avd-aws-0080)\nEncryption should be enabled for an RDS Database instances.\nWhen enabling encryption by setting the kms_key_id.\n",
                "markdown": "**Misconfiguration AVD-AWS-0080**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Terraform Security Check|HIGH|RDS encryption has not been enabled at a DB Instance level.|Instance does not have storage encryption enabled.|[AVD-AWS-0080](https://avd.aquasec.com/misconfig/avd-aws-0080)|\n\nEncryption should be enabled for an RDS Database instances.\nWhen enabling encryption by setting the kms_key_id.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0133",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Enable Performance Insights to detect potential problems"
              },
              "fullDescription": {
                "text": "Enabling Performance insights allows for greater depth in monitoring data.\nFor example, information about active sessions could help diagose a compromise or assist in the investigation\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0133",
              "help": {
                "text": "Misconfiguration AVD-AWS-0133\nType: Terraform Security Check\nSeverity: LOW\nCheck: Enable Performance Insights to detect potential problems\nMessage: Instance does not have performance insights enabled.\nLink: [AVD-AWS-0133](https://avd.aquasec.com/misconfig/avd-aws-0133)\nEnabling Performance insights allows for greater depth in monitoring data.\nFor example, information about active sessions could help diagose a compromise or assist in the investigation\n",
                "markdown": "**Misconfiguration AVD-AWS-0133**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Terraform Security Check|LOW|Enable Performance Insights to detect potential problems|Instance does not have performance insights enabled.|[AVD-AWS-0133](https://avd.aquasec.com/misconfig/avd-aws-0133)|\n\nEnabling Performance insights allows for greater depth in monitoring data.\nFor example, information about active sessions could help diagose a compromise or assist in the investigation\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "AVD-AWS-0176",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "RDS IAM Database Authentication Disabled"
              },
              "fullDescription": {
                "text": "Ensure IAM Database Authentication is enabled for RDS database instances to manage database access"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0176",
              "help": {
                "text": "Misconfiguration AVD-AWS-0176\nType: Terraform Security Check\nSeverity: MEDIUM\nCheck: RDS IAM Database Authentication Disabled\nMessage: Instance does not have IAM Authentication enabled\nLink: [AVD-AWS-0176](https://avd.aquasec.com/misconfig/avd-aws-0176)\nEnsure IAM Database Authentication is enabled for RDS database instances to manage database access",
                "markdown": "**Misconfiguration AVD-AWS-0176**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Terraform Security Check|MEDIUM|RDS IAM Database Authentication Disabled|Instance does not have IAM Authentication enabled|[AVD-AWS-0176](https://avd.aquasec.com/misconfig/avd-aws-0176)|\n\nEnsure IAM Database Authentication is enabled for RDS database instances to manage database access"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "AVD-AWS-0177",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "RDS Deletion Protection Disabled"
              },
              "fullDescription": {
                "text": "Ensure deletion protection is enabled for RDS database instances."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0177",
              "help": {
                "text": "Misconfiguration AVD-AWS-0177\nType: Terraform Security Check\nSeverity: MEDIUM\nCheck: RDS Deletion Protection Disabled\nMessage: Instance does not have Deletion Protection enabled\nLink: [AVD-AWS-0177](https://avd.aquasec.com/misconfig/avd-aws-0177)\nEnsure deletion protection is enabled for RDS database instances.",
                "markdown": "**Misconfiguration AVD-AWS-0177**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Terraform Security Check|MEDIUM|RDS Deletion Protection Disabled|Instance does not have Deletion Protection enabled|[AVD-AWS-0177](https://avd.aquasec.com/misconfig/avd-aws-0177)|\n\nEnsure deletion protection is enabled for RDS database instances."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "AVD-AWS-0180",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "RDS Publicly Accessible"
              },
              "fullDescription": {
                "text": "Ensures RDS instances and RDS Cluster instances are not launched into the public cloud."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0180",
              "help": {
                "text": "Misconfiguration AVD-AWS-0180\nType: Terraform Security Check\nSeverity: HIGH\nCheck: RDS Publicly Accessible\nMessage: Instance has Public Access enabled\nLink: [AVD-AWS-0180](https://avd.aquasec.com/misconfig/avd-aws-0180)\nEnsures RDS instances and RDS Cluster instances are not launched into the public cloud.",
                "markdown": "**Misconfiguration AVD-AWS-0180**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Terraform Security Check|HIGH|RDS Publicly Accessible|Instance has Public Access enabled|[AVD-AWS-0180](https://avd.aquasec.com/misconfig/avd-aws-0180)|\n\nEnsures RDS instances and RDS Cluster instances are not launched into the public cloud."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "DS013",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "\u0026#39;RUN cd ...\u0026#39; to change directory"
              },
              "fullDescription": {
                "text": "Use WORKDIR instead of proliferating instructions like \u0026#39;RUN cd … \u0026amp;\u0026amp; do-something\u0026#39;, which are hard to read, troubleshoot, and maintain."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds013",
              "help": {
                "text": "Misconfiguration DS013\nType: Dockerfile Security Check\nSeverity: MEDIUM\nCheck: 'RUN cd ...' to change directory\nMessage: RUN should not be used to change directory: 'cd /jeIlyfish-0.7.0 \u0026\u0026 python setup.py install'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)\nUse WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
                "markdown": "**Misconfiguration DS013**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|MEDIUM|'RUN cd ...' to change directory|RUN should not be used to change directory: 'cd /jeIlyfish-0.7.0 \u0026\u0026 python setup.py install'. Use 'WORKDIR' statement instead.|[DS013](https://avd.aquasec.com/misconfig/ds013)|\n\nUse WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "DS017",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "\u0026#39;RUN \u0026lt;package-manager\u0026gt; update\u0026#39; instruction alone"
              },
              "fullDescription": {
                "text": "The instruction \u0026#39;RUN \u0026lt;package-manager\u0026gt; update\u0026#39; should always be followed by \u0026#39;\u0026lt;package-manager\u0026gt; install\u0026#39; in the same RUN statement."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds017",
              "help": {
                "text": "Misconfiguration DS017\nType: Dockerfile Security Check\nSeverity: HIGH\nCheck: 'RUN \u003cpackage-manager\u003e update' instruction alone\nMessage: The instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.\nLink: [DS017](https://avd.aquasec.com/misconfig/ds017)\nThe instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.",
                "markdown": "**Misconfiguration DS017**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|HIGH|'RUN \u003cpackage-manager\u003e update' instruction alone|The instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.|[DS017](https://avd.aquasec.com/misconfig/ds017)|\n\nThe instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "DS029",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "\u0026#39;apt-get\u0026#39; missing \u0026#39;--no-install-recommends\u0026#39;"
              },
              "fullDescription": {
                "text": "\u0026#39;apt-get\u0026#39; install should use \u0026#39;--no-install-recommends\u0026#39; to minimize image size."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds029",
              "help": {
                "text": "Misconfiguration DS029\nType: Dockerfile Security Check\nSeverity: HIGH\nCheck: 'apt-get' missing '--no-install-recommends'\nMessage: '--no-install-recommends' flag is missed: 'apt-get install -y openssh-server'\nLink: [DS029](https://avd.aquasec.com/misconfig/ds029)\n'apt-get' install should use '--no-install-recommends' to minimize image size.",
                "markdown": "**Misconfiguration DS029**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|HIGH|'apt-get' missing '--no-install-recommends'|'--no-install-recommends' flag is missed: 'apt-get install -y openssh-server'|[DS029](https://avd.aquasec.com/misconfig/ds029)|\n\n'apt-get' install should use '--no-install-recommends' to minimize image size."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "code-generic-credential-api-key",
              "name": "Secret",
              "shortDescription": {
                "text": "Code Generic Credential API Key"
              },
              "fullDescription": {
                "text": "_KEY}`\\nconst DATA_API_KEY = \u0026#39;*********\u0026#39;\\nconst JQUERY_NO_C"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/aquasecurity/trivy/blob/main/pkg/fanal/secret/builtin-rules.go",
              "help": {
                "text": "Secret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C",
                "markdown": "**Secret Code Generic Credential API Key**\n| Severity | Match |\n| --- | --- |\n|HIGH|_KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C|"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "secret",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "PIPELINE-0005",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "persist-credentials is true"
              },
              "fullDescription": {
                "text": "The checkout action stores secrets it uses on disk by default. This can result in leak of sensitive data, because an attacker that gained access to the runner where checkout action run, or injected malicious code to the running workflow will gain access to the secret stored. So it is recommended to set persist-credentials to false, so the action will save it only in memory and there will be less chance for an attacker to steal the secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "text": "Misconfiguration PIPELINE-0005\nType: Pipeline Security Check\nSeverity: HIGH\nCheck: persist-credentials is true\nMessage: Consider adding persist-credentials: false to the checkout action in job 'Run Manifest on Windows' inputs\nLink: [PIPELINE-0005]()\nThe checkout action stores secrets it uses on disk by default. This can result in leak of sensitive data, because an attacker that gained access to the runner where checkout action run, or injected malicious code to the running workflow will gain access to the secret stored. So it is recommended to set persist-credentials to false, so the action will save it only in memory and there will be less chance for an attacker to steal the secret",
                "markdown": "**Misconfiguration PIPELINE-0005**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Pipeline Security Check|HIGH|persist-credentials is true|Consider adding persist-credentials: false to the checkout action in job 'Run Manifest on Windows' inputs|[PIPELINE-0005]()|\n\nThe checkout action stores secrets it uses on disk by default. This can result in leak of sensitive data, because an attacker that gained access to the runner where checkout action run, or injected malicious code to the running workflow will gain access to the secret stored. So it is recommended to set persist-credentials to false, so the action will save it only in memory and there will be less chance for an attacker to steal the secret"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "PIPELINE-0023",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Ensure run-time security is enforced for build workers"
              },
              "fullDescription": {
                "text": "Add traces to build workers\u0026#39; operating systems and installed applications so that in run time, collected events can be analyzed to detect suspicious behavior patterns and malware."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "text": "Misconfiguration PIPELINE-0023\nType: Pipeline Security Check\nSeverity: HIGH\nCheck: Ensure run-time security is enforced for build workers\nMessage: Consider adding a suspicious behavior protection tool in pipeline 'Generate Manifest on Windows'\nLink: [PIPELINE-0023]()\nAdd traces to build workers' operating systems and installed applications so that in run time, collected events can be analyzed to detect suspicious behavior patterns and malware.",
                "markdown": "**Misconfiguration PIPELINE-0023**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Pipeline Security Check|HIGH|Ensure run-time security is enforced for build workers|Consider adding a suspicious behavior protection tool in pipeline 'Generate Manifest on Windows'|[PIPELINE-0023]()|\n\nAdd traces to build workers' operating systems and installed applications so that in run time, collected events can be analyzed to detect suspicious behavior patterns and malware."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            }
          ],
          "version": "dev"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-40152",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: com.fasterxml.woodstox:woodstox-core\nInstalled Version: 6.2.1\nVulnerability CVE-2022-40152\nSeverity: MEDIUM\nFixed Version: 6.4.0, 5.4.0\nLink: [CVE-2022-40152](https://avd.aquasec.com/nvd/cve-2022-40152)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: com.fasterxml.woodstox:woodstox-core@6.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10237",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: com.google.guava:guava\nInstalled Version: 15.0\nVulnerability CVE-2018-10237\nSeverity: MEDIUM\nFixed Version: 24.1.1-android\nLink: [CVE-2018-10237](https://avd.aquasec.com/nvd/cve-2018-10237)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: com.google.guava:guava@15.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2976",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: com.google.guava:guava\nInstalled Version: 15.0\nVulnerability CVE-2023-2976\nSeverity: MEDIUM\nFixed Version: 32.0.0-android\nLink: [CVE-2023-2976](https://avd.aquasec.com/nvd/cve-2023-2976)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: com.google.guava:guava@15.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8908",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Package: com.google.guava:guava\nInstalled Version: 15.0\nVulnerability CVE-2020-8908\nSeverity: LOW\nFixed Version: 32.0.0-android\nLink: [CVE-2020-8908](https://avd.aquasec.com/nvd/cve-2020-8908)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: com.google.guava:guava@15.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24998",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: commons-fileupload:commons-fileupload\nInstalled Version: 1.3.3\nVulnerability CVE-2023-24998\nSeverity: HIGH\nFixed Version: 1.5\nLink: [CVE-2023-24998](https://avd.aquasec.com/nvd/cve-2023-24998)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 1,
                  "endLine": 179,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: commons-fileupload:commons-fileupload@1.3.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47554",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: commons-io:commons-io\nInstalled Version: 2.2\nVulnerability CVE-2024-47554\nSeverity: HIGH\nFixed Version: 2.14.0\nLink: [CVE-2024-47554](https://avd.aquasec.com/nvd/cve-2024-47554)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: commons-io:commons-io@2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-29425",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Package: commons-io:commons-io\nInstalled Version: 2.2\nVulnerability CVE-2021-29425\nSeverity: MEDIUM\nFixed Version: 2.7\nLink: [CVE-2021-29425](https://avd.aquasec.com/nvd/cve-2021-29425)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: commons-io:commons-io@2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44228",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: org.apache.logging.log4j:log4j-core\nInstalled Version: 2.14.1\nVulnerability CVE-2021-44228\nSeverity: CRITICAL\nFixed Version: 2.15.0, 2.3.1, 2.12.2\nLink: [CVE-2021-44228](https://avd.aquasec.com/nvd/cve-2021-44228)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.apache.logging.log4j:log4j-core@2.14.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45046",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Package: org.apache.logging.log4j:log4j-core\nInstalled Version: 2.14.1\nVulnerability CVE-2021-45046\nSeverity: CRITICAL\nFixed Version: 2.16.0, 2.12.2\nLink: [CVE-2021-45046](https://avd.aquasec.com/nvd/cve-2021-45046)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.apache.logging.log4j:log4j-core@2.14.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45105",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Package: org.apache.logging.log4j:log4j-core\nInstalled Version: 2.14.1\nVulnerability CVE-2021-45105\nSeverity: HIGH\nFixed Version: 2.12.3, 2.17.0, 2.3.1\nLink: [CVE-2021-45105](https://avd.aquasec.com/nvd/cve-2021-45105)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.apache.logging.log4j:log4j-core@2.14.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44832",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: org.apache.logging.log4j:log4j-core\nInstalled Version: 2.14.1\nVulnerability CVE-2021-44832\nSeverity: MEDIUM\nFixed Version: 2.3.2, 2.12.4, 2.17.1\nLink: [CVE-2021-44832](https://avd.aquasec.com/nvd/cve-2021-44832)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.apache.logging.log4j:log4j-core@2.14.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41853",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Package: org.hsqldb:hsqldb\nInstalled Version: 2.3.4\nVulnerability CVE-2022-41853\nSeverity: CRITICAL\nFixed Version: 2.7.1\nLink: [CVE-2022-41853](https://avd.aquasec.com/nvd/cve-2022-41853)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 1,
                  "endLine": 158,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.hsqldb:hsqldb@2.3.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-1597",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Package: org.postgresql:postgresql\nInstalled Version: 9.2-1004-jdbc4\nVulnerability CVE-2024-1597\nSeverity: CRITICAL\nFixed Version: 42.2.28, 42.3.9, 42.4.4, 42.5.5, 42.6.1, 42.7.2\nLink: [CVE-2024-1597](https://avd.aquasec.com/nvd/cve-2024-1597)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 1,
                  "endLine": 152,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.postgresql:postgresql@9.2-1004-jdbc4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31197",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "Package: org.postgresql:postgresql\nInstalled Version: 9.2-1004-jdbc4\nVulnerability CVE-2022-31197\nSeverity: HIGH\nFixed Version: 42.2.26, 42.4.1, 42.3.7\nLink: [CVE-2022-31197](https://avd.aquasec.com/nvd/cve-2022-31197)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 1,
                  "endLine": 152,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.postgresql:postgresql@9.2-1004-jdbc4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22978",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.security:spring-security-core\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2022-22978\nSeverity: CRITICAL\nFixed Version: 5.5.7, 5.6.4, 5.4.11\nLink: [CVE-2022-22978](https://avd.aquasec.com/nvd/cve-2022-22978)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-core@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-5007",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.security:spring-security-core\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2016-5007\nSeverity: HIGH\nFixed Version: 4.1.1\nLink: [CVE-2016-5007](https://avd.aquasec.com/nvd/cve-2016-5007)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-core@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-9879",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.security:spring-security-core\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2016-9879\nSeverity: HIGH\nFixed Version: 3.2.10.RELEASE, 4.1.4.RELEASE, 4.2.1.RELEASE\nLink: [CVE-2016-9879](https://avd.aquasec.com/nvd/cve-2016-9879)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-core@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11272",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.security:spring-security-core\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2019-11272\nSeverity: HIGH\nFixed Version: 4.2.13\nLink: [CVE-2019-11272](https://avd.aquasec.com/nvd/cve-2019-11272)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-core@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22257",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.security:spring-security-core\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2024-22257\nSeverity: HIGH\nFixed Version: 5.7.12, 5.8.11, 6.1.8, 6.2.3\nLink: [CVE-2024-22257](https://avd.aquasec.com/nvd/cve-2024-22257)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-core@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-5408",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework.security:spring-security-core\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2020-5408\nSeverity: MEDIUM\nFixed Version: 5.3.2, 5.2.4, 5.1.10, 5.0.16, 4.2.16\nLink: [CVE-2020-5408](https://avd.aquasec.com/nvd/cve-2020-5408)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-core@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22978",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.security:spring-security-web\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2022-22978\nSeverity: CRITICAL\nFixed Version: 5.5.7, 5.6.4, 5.4.11\nLink: [CVE-2022-22978](https://avd.aquasec.com/nvd/cve-2022-22978)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 1,
                  "endLine": 195,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-web@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38821",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.security:spring-security-web\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2024-38821\nSeverity: CRITICAL\nFixed Version: 5.7.13, 5.8.15, 6.2.7, 6.0.13, 6.1.11, 6.3.4\nLink: [CVE-2024-38821](https://avd.aquasec.com/nvd/cve-2024-38821)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 1,
                  "endLine": 195,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-web@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22112",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Package: org.springframework.security:spring-security-web\nInstalled Version: 4.0.3.RELEASE\nVulnerability CVE-2021-22112\nSeverity: HIGH\nFixed Version: 5.4.4, 5.3.8, 5.2.9\nLink: [CVE-2021-22112](https://avd.aquasec.com/nvd/cve-2021-22112)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 1,
                  "endLine": 195,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework.security:spring-security-web@4.0.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22965",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-beans\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2022-22965\nSeverity: CRITICAL\nFixed Version: 5.2.20.RELEASE, 5.3.18\nLink: [CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-beans@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22970",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-beans\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2022-22970\nSeverity: HIGH\nFixed Version: 5.2.22.RELEASE, 5.3.20\nLink: [CVE-2022-22970](https://avd.aquasec.com/nvd/cve-2022-22970)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-beans@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38827",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-beans\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-38827\nSeverity: MEDIUM\nFixed Version: 6.1.14\nLink: [CVE-2024-38827](https://avd.aquasec.com/nvd/cve-2024-38827)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-beans@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22968",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-context\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2022-22968\nSeverity: HIGH\nFixed Version: 5.3.19, 5.2.21.RELEASE\nLink: [CVE-2022-22968](https://avd.aquasec.com/nvd/cve-2022-22968)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-context@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38820",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-context\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-38820\nSeverity: MEDIUM\nFixed Version: 6.1.14\nLink: [CVE-2024-38820](https://avd.aquasec.com/nvd/cve-2024-38820)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-context@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38827",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-context\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-38827\nSeverity: MEDIUM\nFixed Version: 6.1.14\nLink: [CVE-2024-38827](https://avd.aquasec.com/nvd/cve-2024-38827)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-context@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1270",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2018-1270\nSeverity: CRITICAL\nFixed Version: 5.0.5, 4.3.16\nLink: [CVE-2018-1270](https://avd.aquasec.com/nvd/cve-2018-1270)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-core@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1275",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2018-1275\nSeverity: CRITICAL\nFixed Version: 4.3.16, 5.0.5\nLink: [CVE-2018-1275](https://avd.aquasec.com/nvd/cve-2018-1275)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-core@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-5007",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2016-5007\nSeverity: HIGH\nFixed Version: 4.3.1\nLink: [CVE-2016-5007](https://avd.aquasec.com/nvd/cve-2016-5007)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-core@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1272",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2018-1272\nSeverity: HIGH\nFixed Version: 4.3.15, 5.0.5\nLink: [CVE-2018-1272](https://avd.aquasec.com/nvd/cve-2018-1272)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-core@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-15756",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2018-15756\nSeverity: HIGH\nFixed Version: 5.1.1.RELEASE, 5.0.10.RELEASE, 4.3.20.RELEASE\nLink: [CVE-2018-15756](https://avd.aquasec.com/nvd/cve-2018-15756)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-core@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1257",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2018-1257\nSeverity: MEDIUM\nFixed Version: 5.0.6, 4.3.17\nLink: [CVE-2018-1257](https://avd.aquasec.com/nvd/cve-2018-1257)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-core@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1271",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2018-1271\nSeverity: MEDIUM\nFixed Version: 5.0.5, 4.3.15\nLink: [CVE-2018-1271](https://avd.aquasec.com/nvd/cve-2018-1271)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-core@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38827",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-core\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-38827\nSeverity: MEDIUM\nFixed Version: 6.1.14\nLink: [CVE-2024-38827](https://avd.aquasec.com/nvd/cve-2024-38827)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-core@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-20863",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-expression\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2023-20863\nSeverity: HIGH\nFixed Version: 6.0.8, 5.3.27, 5.2.24.RELEASE\nLink: [CVE-2023-20863](https://avd.aquasec.com/nvd/cve-2023-20863)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-expression@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22950",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-expression\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2022-22950\nSeverity: MEDIUM\nFixed Version: 5.3.17, 5.2.20.RELEASE\nLink: [CVE-2022-22950](https://avd.aquasec.com/nvd/cve-2022-22950)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-expression@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-20861",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-expression\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2023-20861\nSeverity: MEDIUM\nFixed Version: 6.0.7, 5.3.26, 5.2.23.RELEASE\nLink: [CVE-2023-20861](https://avd.aquasec.com/nvd/cve-2023-20861)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-expression@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38808",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-expression\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-38808\nSeverity: MEDIUM\nFixed Version: 5.3.39\nLink: [CVE-2024-38808](https://avd.aquasec.com/nvd/cve-2024-38808)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-expression@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38827",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-expression\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-38827\nSeverity: MEDIUM\nFixed Version: 6.1.14\nLink: [CVE-2024-38827](https://avd.aquasec.com/nvd/cve-2024-38827)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-expression@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38827",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-jdbc\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-38827\nSeverity: MEDIUM\nFixed Version: 6.1.14\nLink: [CVE-2024-38827](https://avd.aquasec.com/nvd/cve-2024-38827)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 1,
                  "endLine": 99,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-jdbc@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000027",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-web\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2016-1000027\nSeverity: CRITICAL\nFixed Version: 6.0.0\nLink: [CVE-2016-1000027](https://avd.aquasec.com/nvd/cve-2016-1000027)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-web@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22243",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-web\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-22243\nSeverity: HIGH\nFixed Version: 6.1.4, 6.0.17, 5.3.32\nLink: [CVE-2024-22243](https://avd.aquasec.com/nvd/cve-2024-22243)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-web@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22259",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-web\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-22259\nSeverity: HIGH\nFixed Version: 6.1.5, 6.0.18, 5.3.33\nLink: [CVE-2024-22259](https://avd.aquasec.com/nvd/cve-2024-22259)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-web@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22262",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-web\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-22262\nSeverity: HIGH\nFixed Version: 5.3.34, 6.0.19, 6.1.6\nLink: [CVE-2024-22262](https://avd.aquasec.com/nvd/cve-2024-22262)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-web@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38809",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "Package: org.springframework:spring-web\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2024-38809\nSeverity: MEDIUM\nFixed Version: 5.3.38, 6.0.23, 6.1.12\nLink: [CVE-2024-38809](https://avd.aquasec.com/nvd/cve-2024-38809)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-web@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22965",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-webmvc\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2022-22965\nSeverity: CRITICAL\nFixed Version: 5.2.20.RELEASE, 5.3.18\nLink: [CVE-2022-22965](https://avd.aquasec.com/nvd/cve-2022-22965)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-webmvc@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-9878",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Package: org.springframework:spring-webmvc\nInstalled Version: 4.2.3.RELEASE\nVulnerability CVE-2016-9878\nSeverity: HIGH\nFixed Version: 3.2.18, 4.2.9, 4.3.5\nLink: [CVE-2016-9878](https://avd.aquasec.com/nvd/cve-2016-9878)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/pom.xml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/pom.xml: org.springframework:spring-webmvc@4.2.3.RELEASE"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3749",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "Package: axios\nInstalled Version: 0.19.2\nVulnerability CVE-2021-3749\nSeverity: HIGH\nFixed Version: 0.21.2\nLink: [CVE-2021-3749](https://avd.aquasec.com/nvd/cve-2021-3749)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 1,
                  "endLine": 78,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: axios@0.19.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28168",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "Package: axios\nInstalled Version: 0.19.2\nVulnerability CVE-2020-28168\nSeverity: MEDIUM\nFixed Version: 0.21.1\nLink: [CVE-2020-28168](https://avd.aquasec.com/nvd/cve-2020-28168)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 1,
                  "endLine": 78,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: axios@0.19.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45857",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Package: axios\nInstalled Version: 0.19.2\nVulnerability CVE-2023-45857\nSeverity: MEDIUM\nFixed Version: 1.6.0, 0.28.0\nLink: [CVE-2023-45857](https://avd.aquasec.com/nvd/cve-2023-45857)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 1,
                  "endLine": 78,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: axios@0.19.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "Package: braces\nInstalled Version: 2.3.2\nVulnerability CVE-2024-4068\nSeverity: HIGH\nFixed Version: 3.0.3\nLink: [CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 1,
                  "endLine": 112,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: braces@2.3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "Package: decode-uri-component\nInstalled Version: 0.2.0\nVulnerability CVE-2022-38900\nSeverity: HIGH\nFixed Version: 0.2.1\nLink: [CVE-2022-38900](https://avd.aquasec.com/nvd/cve-2022-38900)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 1,
                  "endLine": 194,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: decode-uri-component@0.2.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0155",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "Package: follow-redirects\nInstalled Version: 1.5.10\nVulnerability CVE-2022-0155\nSeverity: HIGH\nFixed Version: 1.14.7\nLink: [CVE-2022-0155](https://avd.aquasec.com/nvd/cve-2022-0155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 1,
                  "endLine": 351,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: follow-redirects@1.5.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0536",
          "ruleIndex": 49,
          "level": "warning",
          "message": {
            "text": "Package: follow-redirects\nInstalled Version: 1.5.10\nVulnerability CVE-2022-0536\nSeverity: MEDIUM\nFixed Version: 1.14.8\nLink: [CVE-2022-0536](https://avd.aquasec.com/nvd/cve-2022-0536)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 1,
                  "endLine": 351,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: follow-redirects@1.5.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26159",
          "ruleIndex": 50,
          "level": "warning",
          "message": {
            "text": "Package: follow-redirects\nInstalled Version: 1.5.10\nVulnerability CVE-2023-26159\nSeverity: MEDIUM\nFixed Version: 1.15.4\nLink: [CVE-2023-26159](https://avd.aquasec.com/nvd/cve-2023-26159)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 1,
                  "endLine": 351,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: follow-redirects@1.5.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28849",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "Package: follow-redirects\nInstalled Version: 1.5.10\nVulnerability CVE-2024-28849\nSeverity: MEDIUM\nFixed Version: 1.15.6\nLink: [CVE-2024-28849](https://avd.aquasec.com/nvd/cve-2024-28849)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 1,
                  "endLine": 351,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: follow-redirects@1.5.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11358",
          "ruleIndex": 52,
          "level": "warning",
          "message": {
            "text": "Package: jquery\nInstalled Version: 3.2.1\nVulnerability CVE-2019-11358\nSeverity: MEDIUM\nFixed Version: \u003e=3.4.0\nLink: [CVE-2019-11358](https://avd.aquasec.com/nvd/cve-2019-11358)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 1,
                  "endLine": 543,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: jquery@3.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5428",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "Package: jquery\nInstalled Version: 3.2.1\nVulnerability CVE-2019-5428\nSeverity: MEDIUM\nFixed Version: \u003e=3.4.0\nLink: [CVE-2019-5428](https://avd.aquasec.com/nvd/cve-2019-5428)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 1,
                  "endLine": 543,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: jquery@3.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11022",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "Package: jquery\nInstalled Version: 3.2.1\nVulnerability CVE-2020-11022\nSeverity: MEDIUM\nFixed Version: 3.5.0\nLink: [CVE-2020-11022](https://avd.aquasec.com/nvd/cve-2020-11022)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 1,
                  "endLine": 543,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: jquery@3.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11023",
          "ruleIndex": 55,
          "level": "warning",
          "message": {
            "text": "Package: jquery\nInstalled Version: 3.2.1\nVulnerability CVE-2020-11023\nSeverity: MEDIUM\nFixed Version: 3.5.0\nLink: [CVE-2020-11023](https://avd.aquasec.com/nvd/cve-2020-11023)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 1,
                  "endLine": 543,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: jquery@3.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-46175",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "Package: json5\nInstalled Version: 1.0.1\nVulnerability CVE-2022-46175\nSeverity: HIGH\nFixed Version: 2.2.2, 1.0.2\nLink: [CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 550,
                  "startColumn": 1,
                  "endLine": 555,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: json5@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37601",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "Package: loader-utils\nInstalled Version: 1.4.0\nVulnerability CVE-2022-37601\nSeverity: CRITICAL\nFixed Version: 2.0.3, 1.4.1\nLink: [CVE-2022-37601](https://avd.aquasec.com/nvd/cve-2022-37601)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 1,
                  "endLine": 588,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: loader-utils@1.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37599",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "Package: loader-utils\nInstalled Version: 1.4.0\nVulnerability CVE-2022-37599\nSeverity: HIGH\nFixed Version: 1.4.2, 2.0.4, 3.2.1\nLink: [CVE-2022-37599](https://avd.aquasec.com/nvd/cve-2022-37599)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 1,
                  "endLine": 588,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: loader-utils@1.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37603",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "Package: loader-utils\nInstalled Version: 1.4.0\nVulnerability CVE-2022-37603\nSeverity: HIGH\nFixed Version: 1.4.2, 2.0.4, 3.2.1\nLink: [CVE-2022-37603](https://avd.aquasec.com/nvd/cve-2022-37603)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 1,
                  "endLine": 588,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: loader-utils@1.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4067",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Package: micromatch\nInstalled Version: 3.1.10\nVulnerability CVE-2024-4067\nSeverity: MEDIUM\nFixed Version: 4.0.8\nLink: [CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 1,
                  "endLine": 640,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: micromatch@3.1.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18214",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "Package: moment\nInstalled Version: 2.18.1\nVulnerability CVE-2017-18214\nSeverity: HIGH\nFixed Version: 2.19.3\nLink: [CVE-2017-18214](https://avd.aquasec.com/nvd/cve-2017-18214)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 667,
                  "startColumn": 1,
                  "endLine": 670,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: moment@2.18.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24785",
          "ruleIndex": 62,
          "level": "error",
          "message": {
            "text": "Package: moment\nInstalled Version: 2.18.1\nVulnerability CVE-2022-24785\nSeverity: HIGH\nFixed Version: 2.29.2\nLink: [CVE-2022-24785](https://avd.aquasec.com/nvd/cve-2022-24785)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 667,
                  "startColumn": 1,
                  "endLine": 670,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: moment@2.18.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31129",
          "ruleIndex": 63,
          "level": "error",
          "message": {
            "text": "Package: moment\nInstalled Version: 2.18.1\nVulnerability CVE-2022-31129\nSeverity: HIGH\nFixed Version: 2.29.4\nLink: [CVE-2022-31129](https://avd.aquasec.com/nvd/cve-2022-31129)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 667,
                  "startColumn": 1,
                  "endLine": 670,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: moment@2.18.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0235",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "Package: node-fetch\nInstalled Version: 1.7.3\nVulnerability CVE-2022-0235\nSeverity: HIGH\nFixed Version: 3.1.1, 2.6.7\nLink: [CVE-2022-0235](https://avd.aquasec.com/nvd/cve-2022-0235)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 699,
                  "startColumn": 1,
                  "endLine": 705,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: node-fetch@1.7.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29180",
          "ruleIndex": 65,
          "level": "error",
          "message": {
            "text": "Package: webpack-dev-middleware\nInstalled Version: 1.12.2\nVulnerability CVE-2024-29180\nSeverity: HIGH\nFixed Version: 7.1.0, 6.1.2, 5.3.4\nLink: [CVE-2024-29180](https://avd.aquasec.com/nvd/cve-2024-29180)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/yarn.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1013,
                  "startColumn": 1,
                  "endLine": 1022,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/yarn.lock: webpack-dev-middleware@1.12.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-30861",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "Package: Flask\nInstalled Version: 1.1.2\nVulnerability CVE-2023-30861\nSeverity: HIGH\nFixed Version: 2.3.2, 2.2.5\nLink: [CVE-2023-30861](https://avd.aquasec.com/nvd/cve-2023-30861)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Flask@1.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-6221",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "Package: Flask-Cors\nInstalled Version: 3.0.10\nVulnerability CVE-2024-6221\nSeverity: HIGH\nFixed Version: 4.0.2\nLink: [CVE-2024-6221](https://avd.aquasec.com/nvd/cve-2024-6221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Flask-Cors@3.0.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-1681",
          "ruleIndex": 68,
          "level": "warning",
          "message": {
            "text": "Package: Flask-Cors\nInstalled Version: 3.0.10\nVulnerability CVE-2024-1681\nSeverity: MEDIUM\nFixed Version: 4.0.1\nLink: [CVE-2024-1681](https://avd.aquasec.com/nvd/cve-2024-1681)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Flask-Cors@3.0.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28493",
          "ruleIndex": 69,
          "level": "warning",
          "message": {
            "text": "Package: Jinja2\nInstalled Version: 2.11.2\nVulnerability CVE-2020-28493\nSeverity: MEDIUM\nFixed Version: 2.11.3\nLink: [CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Jinja2@2.11.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22195",
          "ruleIndex": 70,
          "level": "warning",
          "message": {
            "text": "Package: Jinja2\nInstalled Version: 2.11.2\nVulnerability CVE-2024-22195\nSeverity: MEDIUM\nFixed Version: 3.1.3\nLink: [CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Jinja2@2.11.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34064",
          "ruleIndex": 71,
          "level": "warning",
          "message": {
            "text": "Package: Jinja2\nInstalled Version: 2.11.2\nVulnerability CVE-2024-34064\nSeverity: MEDIUM\nFixed Version: 3.1.4\nLink: [CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Jinja2@2.11.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29217",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "Package: PyJWT\nInstalled Version: 2.3.0\nVulnerability CVE-2022-29217\nSeverity: HIGH\nFixed Version: 2.4.0\nLink: [CVE-2022-29217](https://avd.aquasec.com/nvd/cve-2022-29217)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: PyJWT@2.3.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25577",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2023-25577\nSeverity: HIGH\nFixed Version: 2.2.3\nLink: [CVE-2023-25577](https://avd.aquasec.com/nvd/cve-2023-25577)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34069",
          "ruleIndex": 74,
          "level": "error",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2024-34069\nSeverity: HIGH\nFixed Version: 3.0.3\nLink: [CVE-2024-34069](https://avd.aquasec.com/nvd/cve-2024-34069)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46136",
          "ruleIndex": 75,
          "level": "warning",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2023-46136\nSeverity: MEDIUM\nFixed Version: 3.0.1, 2.3.8\nLink: [CVE-2023-46136](https://avd.aquasec.com/nvd/cve-2023-46136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-49766",
          "ruleIndex": 76,
          "level": "warning",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2024-49766\nSeverity: MEDIUM\nFixed Version: 3.0.6\nLink: [CVE-2024-49766](https://avd.aquasec.com/nvd/cve-2024-49766)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-49767",
          "ruleIndex": 77,
          "level": "warning",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2024-49767\nSeverity: MEDIUM\nFixed Version: 3.0.6\nLink: [CVE-2024-49767](https://avd.aquasec.com/nvd/cve-2024-49767)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23934",
          "ruleIndex": 78,
          "level": "note",
          "message": {
            "text": "Package: Werkzeug\nInstalled Version: 1.0.1\nVulnerability CVE-2023-23934\nSeverity: LOW\nFixed Version: 2.2.3\nLink: [CVE-2023-23934](https://avd.aquasec.com/nvd/cve-2023-23934)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: Werkzeug@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-37920",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "Package: certifi\nInstalled Version: 2020.12.5\nVulnerability CVE-2023-37920\nSeverity: HIGH\nFixed Version: 2023.7.22\nLink: [CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: certifi@2020.12.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23491",
          "ruleIndex": 80,
          "level": "warning",
          "message": {
            "text": "Package: certifi\nInstalled Version: 2020.12.5\nVulnerability CVE-2022-23491\nSeverity: MEDIUM\nFixed Version: 2022.12.07\nLink: [CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: certifi@2020.12.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-41419",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "Package: gevent\nInstalled Version: 21.12.0\nVulnerability CVE-2023-41419\nSeverity: CRITICAL\nFixed Version: 23.9.0\nLink: [CVE-2023-41419](https://avd.aquasec.com/nvd/cve-2023-41419)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: gevent@21.12.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3651",
          "ruleIndex": 82,
          "level": "warning",
          "message": {
            "text": "Package: idna\nInstalled Version: 2.10\nVulnerability CVE-2024-3651\nSeverity: MEDIUM\nFixed Version: 3.7\nLink: [CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: idna@2.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42969",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "Package: py\nInstalled Version: 1.11.0\nVulnerability CVE-2022-42969\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2022-42969](https://avd.aquasec.com/nvd/cve-2022-42969)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: py@1.11.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32681",
          "ruleIndex": 84,
          "level": "warning",
          "message": {
            "text": "Package: requests\nInstalled Version: 2.25.1\nVulnerability CVE-2023-32681\nSeverity: MEDIUM\nFixed Version: 2.31.0\nLink: [CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: requests@2.25.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-35195",
          "ruleIndex": 85,
          "level": "warning",
          "message": {
            "text": "Package: requests\nInstalled Version: 2.25.1\nVulnerability CVE-2024-35195\nSeverity: MEDIUM\nFixed Version: 2.32.0\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: requests@2.25.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33503",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2021-33503\nSeverity: HIGH\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-43804",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2023-43804\nSeverity: HIGH\nFixed Version: 2.0.6, 1.26.17\nLink: [CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28363",
          "ruleIndex": 88,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2021-28363\nSeverity: MEDIUM\nFixed Version: 1.26.4\nLink: [CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45803",
          "ruleIndex": 89,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2023-45803\nSeverity: MEDIUM\nFixed Version: 2.0.7, 1.26.18\nLink: [CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37891",
          "ruleIndex": 90,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.3\nVulnerability CVE-2024-37891\nSeverity: MEDIUM\nFixed Version: 1.26.19, 2.2.2\nLink: [CVE-2024-37891](https://avd.aquasec.com/nvd/cve-2024-37891)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requirements.txt: urllib3@1.26.3"
              }
            }
          ]
        },
        {
          "ruleId": "DS002",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "Artifact: Dockerfile\nType: dockerfile\nVulnerability DS002\nSeverity: HIGH\nMessage: Specify at least 1 USER command in Dockerfile with non-root user as argument\nLink: [DS002](https://avd.aquasec.com/misconfig/ds002)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS005",
          "ruleIndex": 92,
          "level": "note",
          "message": {
            "text": "Artifact: Dockerfile\nType: dockerfile\nVulnerability DS005\nSeverity: LOW\nMessage: Consider using 'COPY core /opt/dvga/core' command instead of 'ADD core /opt/dvga/core'\nLink: [DS005](https://avd.aquasec.com/misconfig/ds005)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS005",
          "ruleIndex": 92,
          "level": "note",
          "message": {
            "text": "Artifact: Dockerfile\nType: dockerfile\nVulnerability DS005\nSeverity: LOW\nMessage: Consider using 'COPY db /opt/dvga/db' command instead of 'ADD db /opt/dvga/db'\nLink: [DS005](https://avd.aquasec.com/misconfig/ds005)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS005",
          "ruleIndex": 92,
          "level": "note",
          "message": {
            "text": "Artifact: Dockerfile\nType: dockerfile\nVulnerability DS005\nSeverity: LOW\nMessage: Consider using 'COPY static /opt/dvga/static' command instead of 'ADD static /opt/dvga/static'\nLink: [DS005](https://avd.aquasec.com/misconfig/ds005)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS005",
          "ruleIndex": 92,
          "level": "note",
          "message": {
            "text": "Artifact: Dockerfile\nType: dockerfile\nVulnerability DS005\nSeverity: LOW\nMessage: Consider using 'COPY templates /opt/dvga/templates' command instead of 'ADD templates /opt/dvga/templates'\nLink: [DS005](https://avd.aquasec.com/misconfig/ds005)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS025",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "Artifact: Dockerfile\nType: dockerfile\nVulnerability DS025\nSeverity: HIGH\nMessage: '--no-cache' is missed: apk add --update curl\nLink: [DS025](https://avd.aquasec.com/misconfig/ds025)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS026",
          "ruleIndex": 94,
          "level": "note",
          "message": {
            "text": "Artifact: Dockerfile\nType: dockerfile\nVulnerability DS026\nSeverity: LOW\nMessage: Add HEALTHCHECK instruction in your Dockerfile\nLink: [DS026](https://avd.aquasec.com/misconfig/ds026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0077",
          "ruleIndex": 95,
          "level": "warning",
          "message": {
            "text": "Artifact: generate-findings/insecure-db.tf\nType: terraform\nVulnerability AVD-AWS-0077\nSeverity: MEDIUM\nMessage: Instance has very low backup retention period.\nLink: [AVD-AWS-0077](https://avd.aquasec.com/misconfig/avd-aws-0077)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/insecure-db.tf",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/insecure-db.tf"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0080",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "Artifact: generate-findings/insecure-db.tf\nType: terraform\nVulnerability AVD-AWS-0080\nSeverity: HIGH\nMessage: Instance does not have storage encryption enabled.\nLink: [AVD-AWS-0080](https://avd.aquasec.com/misconfig/avd-aws-0080)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/insecure-db.tf",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/insecure-db.tf"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0133",
          "ruleIndex": 97,
          "level": "note",
          "message": {
            "text": "Artifact: generate-findings/insecure-db.tf\nType: terraform\nVulnerability AVD-AWS-0133\nSeverity: LOW\nMessage: Instance does not have performance insights enabled.\nLink: [AVD-AWS-0133](https://avd.aquasec.com/misconfig/avd-aws-0133)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/insecure-db.tf",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/insecure-db.tf"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0176",
          "ruleIndex": 98,
          "level": "warning",
          "message": {
            "text": "Artifact: generate-findings/insecure-db.tf\nType: terraform\nVulnerability AVD-AWS-0176\nSeverity: MEDIUM\nMessage: Instance does not have IAM Authentication enabled\nLink: [AVD-AWS-0176](https://avd.aquasec.com/misconfig/avd-aws-0176)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/insecure-db.tf",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/insecure-db.tf"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0177",
          "ruleIndex": 99,
          "level": "warning",
          "message": {
            "text": "Artifact: generate-findings/insecure-db.tf\nType: terraform\nVulnerability AVD-AWS-0177\nSeverity: MEDIUM\nMessage: Instance does not have Deletion Protection enabled\nLink: [AVD-AWS-0177](https://avd.aquasec.com/misconfig/avd-aws-0177)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/insecure-db.tf",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/insecure-db.tf"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0180",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "Artifact: generate-findings/insecure-db.tf\nType: terraform\nVulnerability AVD-AWS-0180\nSeverity: HIGH\nMessage: Instance has Public Access enabled\nLink: [AVD-AWS-0180](https://avd.aquasec.com/misconfig/avd-aws-0180)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "generate-findings/insecure-db.tf",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "generate-findings/insecure-db.tf"
              }
            }
          ]
        },
        {
          "ruleId": "DS005",
          "ruleIndex": 92,
          "level": "note",
          "message": {
            "text": "Artifact: jeilyfish/Dockerfile\nType: dockerfile\nVulnerability DS005\nSeverity: LOW\nMessage: Consider using 'COPY jeIlyfish-0.7.0/ /jeIlyfish-0.7.0/' command instead of 'ADD jeIlyfish-0.7.0/ /jeIlyfish-0.7.0/'\nLink: [DS005](https://avd.aquasec.com/misconfig/ds005)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "jeilyfish/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "jeilyfish/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS005",
          "ruleIndex": 92,
          "level": "note",
          "message": {
            "text": "Artifact: jeilyfish/Dockerfile\nType: dockerfile\nVulnerability DS005\nSeverity: LOW\nMessage: Consider using 'COPY main.py /main.py' command instead of 'ADD main.py /main.py'\nLink: [DS005](https://avd.aquasec.com/misconfig/ds005)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "jeilyfish/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 5,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "jeilyfish/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS013",
          "ruleIndex": 101,
          "level": "warning",
          "message": {
            "text": "Artifact: jeilyfish/Dockerfile\nType: dockerfile\nVulnerability DS013\nSeverity: MEDIUM\nMessage: RUN should not be used to change directory: 'cd /jeIlyfish-0.7.0 \u0026\u0026 python setup.py install'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "jeilyfish/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "jeilyfish/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS017",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "Artifact: jeilyfish/Dockerfile\nType: dockerfile\nVulnerability DS017\nSeverity: HIGH\nMessage: The instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.\nLink: [DS017](https://avd.aquasec.com/misconfig/ds017)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "jeilyfish/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "jeilyfish/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS026",
          "ruleIndex": 94,
          "level": "note",
          "message": {
            "text": "Artifact: jeilyfish/Dockerfile\nType: dockerfile\nVulnerability DS026\nSeverity: LOW\nMessage: Add HEALTHCHECK instruction in your Dockerfile\nLink: [DS026](https://avd.aquasec.com/misconfig/ds026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "jeilyfish/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "jeilyfish/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS029",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "Artifact: jeilyfish/Dockerfile\nType: dockerfile\nVulnerability DS029\nSeverity: HIGH\nMessage: '--no-install-recommends' flag is missed: 'apt-get install -y openssh-server'\nLink: [DS029](https://avd.aquasec.com/misconfig/ds029)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "jeilyfish/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 8,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "jeilyfish/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch:   var DATA_API_KEY = '*********';"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 1,
                  "endLine": 241,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch:   var DATA_API_KEY = '*********';"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 1,
                  "endLine": 240,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "code-generic-credential-api-key",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Artifact: static/bootstrap/js/bootstrap.bundle.min.js.map\nType: \nSecret Code Generic Credential API Key\nSeverity: HIGH\nMatch: _KEY}`\\nconst DATA_API_KEY = '*********'\\nconst JQUERY_NO_C"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "static/bootstrap/js/bootstrap.bundle.min.js.map",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "static/bootstrap/js/bootstrap.bundle.min.js.map"
              }
            }
          ]
        },
        {
          "ruleId": "PIPELINE-0005",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "Artifact: .github/workflows/billy-windows.yml\nType: pipeline\nVulnerability PIPELINE-0005\nSeverity: HIGH\nMessage: Consider adding persist-credentials: false to the checkout action in job 'Run Manifest on Windows' inputs\nLink: [PIPELINE-0005]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/billy-windows.yml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 1
                }
              },
              "message": {
                "text": ".github/workflows/billy-windows.yml"
              }
            }
          ]
        },
        {
          "ruleId": "PIPELINE-0023",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "Artifact: .github/workflows/billy-windows.yml\nType: pipeline\nVulnerability PIPELINE-0023\nSeverity: HIGH\nMessage: Consider adding a suspicious behavior protection tool in pipeline 'Generate Manifest on Windows'\nLink: [PIPELINE-0023]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/billy-windows.yml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": ".github/workflows/billy-windows.yml"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///Users/tamirsinai/Argon/graphql-vuln/results.json/"
        }
      }
    }
  ]
}