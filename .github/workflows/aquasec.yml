name: build
on:
  push:
    branches:
      - aqua-image-scan
      
jobs:
  aqua:
    name: Aqua scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Supply Chain Code Scan
        uses: docker://aquasec/aqua-scanner:latest
        with:
          args: trivy fs -d -f sarif -o results.sarif --scanners config,vuln,secret .
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
           # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          category: trivy
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: false
          tags: "saargondocker/graphql-vuln:${{ github.sha }}"
      - name: Login to Aqua Registry and run Image Scan
        run: |
          docker login registry.aquasec.com -u ${{ secrets.AQUA_USERNAME }} -p ${{ secrets.AQUA_PASSWORD }}
          docker run -d registry.aquasec.com/scanner:2408.2.20 daemon --token ${{secrets.AQUA_TOKEN}} --host ${{secrets.AQUA_HOST}}
        
      - name: Manifest Generation
        run: |
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | shasum -a 256 ; then
            echo "install.sh checksum failed"
            exit 1
          fi
          sh install.sh
          rm install.sh install.sh.checksum
          billy generate \
              --access-token "${{ secrets.GITHUB_TOKEN }}" \
              --aqua-key "${{ secrets.AQUA_KEY }}" \
              --aqua-secret "${{ secrets.AQUA_SECRET }}" \
              --artifact-path "saargondocker/graphql-vuln:${{ github.sha }}" 
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image
        uses: docker/build-push-action@v3
        with:
          build: false
          tags: "saargondocker/graphql-vuln:${{ github.sha }}"

