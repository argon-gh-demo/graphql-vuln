name: build
on:
  push:
    branches:
      - sarif-convert
jobs:
  aqua:
    name: Aqua scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy -d -f json -o results.json fs --scanners config,vuln,secret . 
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          TRIVY_USERNAME: ${{secrets.TRIVY_USERNAME}}
          TRIVY_PASSWORD: ${{secrets.TRIVY_PASSWORD}}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          TRIVY_DB_REPOSITORY: "registry.aquasec.com/trivy-db:2"
          TRIVY_JAVA_DB_REPOSITORY: "registry.aquasec.com/trivy-java-db:1"
          TRIVY_CHECKS_BUNDLE_REPOSITORY: "registry.aquasec.com/trivy-checks:1"
      - name: Convert JSON to SARIF
        uses: docker://aquasec/aqua-scanner:dev
        with:
          args: trivy convert --format sarif --output results.sarif results.json
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          TRIVY_USERNAME: ${{secrets.TRIVY_USERNAME}}
          TRIVY_PASSWORD: ${{secrets.TRIVY_PASSWORD}}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          TRIVY_DB_REPOSITORY: "registry.aquasec.com/trivy-db:2"
          TRIVY_JAVA_DB_REPOSITORY: "registry.aquasec.com/trivy-java-db:1"
          TRIVY_CHECKS_BUNDLE_REPOSITORY: "registry.aquasec.com/trivy-checks:1"
      - name: Tamirs
        run: |
          cat results.sarif
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
           # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          category: trivy
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: "saargondocker/graphql-vuln:${{github.branch}}${{ github.sha }}"
      - name: Manifest Generation
        run: |
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | shasum -a 256 ; then
            echo "install.sh checksum failed"
            exit 1
          fi
          sh install.sh
          rm install.sh install.sh.checksum
          billy generate \
              --access-token "${{ secrets.GITHUB_TOKEN }}" \
              --aqua-key "${{ secrets.AQUA_KEY }}" \
              --aqua-secret "${{ secrets.AQUA_SECRET }}" \
              --artifact-path "saargondocker/graphql-vuln:${{github.branch}}${{ github.sha }}"

